/*
 * This file is part of Sponge, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.common.registry.builtin.vanilla;

import net.minecraft.util.SoundEvents;
import org.spongepowered.api.effect.sound.SoundType;
import org.spongepowered.common.registry.SpongeCatalogRegistry;

public final class SoundEventSupplier {

    private SoundEventSupplier() {
    }

    public static void registerSuppliers(final SpongeCatalogRegistry registry) {
        registry
            .registerSupplier(SoundType.class, "ambient_cave", () -> (SoundType) SoundEvents.AMBIENT_CAVE)
            .registerSupplier(SoundType.class, "ambient_underwater_enter", () -> (SoundType) SoundEvents.AMBIENT_UNDERWATER_ENTER)
            .registerSupplier(SoundType.class, "ambient_underwater_exit", () -> (SoundType) SoundEvents.AMBIENT_UNDERWATER_EXIT)
            .registerSupplier(SoundType.class, "ambient_underwater_loop", () -> (SoundType) SoundEvents.AMBIENT_UNDERWATER_LOOP)
            .registerSupplier(SoundType.class, "ambient_underwater_loop_additions", () -> (SoundType) SoundEvents.AMBIENT_UNDERWATER_LOOP_ADDITIONS)
            .registerSupplier(SoundType.class, "ambient_underwater_loop_additions_rare", () -> (SoundType) SoundEvents.AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE)
            .registerSupplier(SoundType.class, "ambient_underwater_loop_additions_ultra_rare", () -> (SoundType) SoundEvents.AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE)
            .registerSupplier(SoundType.class, "block_anvil_break", () -> (SoundType) SoundEvents.BLOCK_ANVIL_BREAK)
            .registerSupplier(SoundType.class, "block_anvil_destroy", () -> (SoundType) SoundEvents.BLOCK_ANVIL_DESTROY)
            .registerSupplier(SoundType.class, "block_anvil_fall", () -> (SoundType) SoundEvents.BLOCK_ANVIL_FALL)
            .registerSupplier(SoundType.class, "block_anvil_hit", () -> (SoundType) SoundEvents.BLOCK_ANVIL_HIT)
            .registerSupplier(SoundType.class, "block_anvil_land", () -> (SoundType) SoundEvents.BLOCK_ANVIL_LAND)
            .registerSupplier(SoundType.class, "block_anvil_place", () -> (SoundType) SoundEvents.BLOCK_ANVIL_PLACE)
            .registerSupplier(SoundType.class, "block_anvil_step", () -> (SoundType) SoundEvents.BLOCK_ANVIL_STEP)
            .registerSupplier(SoundType.class, "block_anvil_use", () -> (SoundType) SoundEvents.BLOCK_ANVIL_USE)
            .registerSupplier(SoundType.class, "item_armor_equip_chain", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_CHAIN)
            .registerSupplier(SoundType.class, "item_armor_equip_diamond", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_DIAMOND)
            .registerSupplier(SoundType.class, "item_armor_equip_elytra", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_ELYTRA)
            .registerSupplier(SoundType.class, "item_armor_equip_generic", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_GENERIC)
            .registerSupplier(SoundType.class, "item_armor_equip_gold", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_GOLD)
            .registerSupplier(SoundType.class, "item_armor_equip_iron", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_IRON)
            .registerSupplier(SoundType.class, "item_armor_equip_leather", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_LEATHER)
            .registerSupplier(SoundType.class, "item_armor_equip_turtle", () -> (SoundType) SoundEvents.ITEM_ARMOR_EQUIP_TURTLE)
            .registerSupplier(SoundType.class, "entity_armor_stand_break", () -> (SoundType) SoundEvents.ENTITY_ARMOR_STAND_BREAK)
            .registerSupplier(SoundType.class, "entity_armor_stand_fall", () -> (SoundType) SoundEvents.ENTITY_ARMOR_STAND_FALL)
            .registerSupplier(SoundType.class, "entity_armor_stand_hit", () -> (SoundType) SoundEvents.ENTITY_ARMOR_STAND_HIT)
            .registerSupplier(SoundType.class, "entity_armor_stand_place", () -> (SoundType) SoundEvents.ENTITY_ARMOR_STAND_PLACE)
            .registerSupplier(SoundType.class, "entity_arrow_hit", () -> (SoundType) SoundEvents.ENTITY_ARROW_HIT)
            .registerSupplier(SoundType.class, "entity_arrow_hit_player", () -> (SoundType) SoundEvents.ENTITY_ARROW_HIT_PLAYER)
            .registerSupplier(SoundType.class, "entity_arrow_shoot", () -> (SoundType) SoundEvents.ENTITY_ARROW_SHOOT)
            .registerSupplier(SoundType.class, "item_axe_strip", () -> (SoundType) SoundEvents.ITEM_AXE_STRIP)
            .registerSupplier(SoundType.class, "block_bamboo_break", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_BREAK)
            .registerSupplier(SoundType.class, "block_bamboo_fall", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_FALL)
            .registerSupplier(SoundType.class, "block_bamboo_hit", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_HIT)
            .registerSupplier(SoundType.class, "block_bamboo_place", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_PLACE)
            .registerSupplier(SoundType.class, "block_bamboo_step", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_STEP)
            .registerSupplier(SoundType.class, "block_bamboo_sapling_break", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_SAPLING_BREAK)
            .registerSupplier(SoundType.class, "block_bamboo_sapling_hit", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_SAPLING_HIT)
            .registerSupplier(SoundType.class, "block_bamboo_sapling_place", () -> (SoundType) SoundEvents.BLOCK_BAMBOO_SAPLING_PLACE)
            .registerSupplier(SoundType.class, "block_barrel_close", () -> (SoundType) SoundEvents.BLOCK_BARREL_CLOSE)
            .registerSupplier(SoundType.class, "block_barrel_open", () -> (SoundType) SoundEvents.BLOCK_BARREL_OPEN)
            .registerSupplier(SoundType.class, "entity_bat_ambient", () -> (SoundType) SoundEvents.ENTITY_BAT_AMBIENT)
            .registerSupplier(SoundType.class, "entity_bat_death", () -> (SoundType) SoundEvents.ENTITY_BAT_DEATH)
            .registerSupplier(SoundType.class, "entity_bat_hurt", () -> (SoundType) SoundEvents.ENTITY_BAT_HURT)
            .registerSupplier(SoundType.class, "entity_bat_loop", () -> (SoundType) SoundEvents.ENTITY_BAT_LOOP)
            .registerSupplier(SoundType.class, "entity_bat_takeoff", () -> (SoundType) SoundEvents.ENTITY_BAT_TAKEOFF)
            .registerSupplier(SoundType.class, "block_beacon_activate", () -> (SoundType) SoundEvents.BLOCK_BEACON_ACTIVATE)
            .registerSupplier(SoundType.class, "block_beacon_ambient", () -> (SoundType) SoundEvents.BLOCK_BEACON_AMBIENT)
            .registerSupplier(SoundType.class, "block_beacon_deactivate", () -> (SoundType) SoundEvents.BLOCK_BEACON_DEACTIVATE)
            .registerSupplier(SoundType.class, "block_beacon_power_select", () -> (SoundType) SoundEvents.BLOCK_BEACON_POWER_SELECT)
            .registerSupplier(SoundType.class, "entity_bee_death", () -> (SoundType) SoundEvents.ENTITY_BEE_DEATH)
            .registerSupplier(SoundType.class, "entity_bee_hurt", () -> (SoundType) SoundEvents.ENTITY_BEE_HURT)
            .registerSupplier(SoundType.class, "entity_bee_loop_aggressive", () -> (SoundType) SoundEvents.ENTITY_BEE_LOOP_AGGRESSIVE)
            .registerSupplier(SoundType.class, "entity_bee_loop", () -> (SoundType) SoundEvents.ENTITY_BEE_LOOP)
            .registerSupplier(SoundType.class, "entity_bee_sting", () -> (SoundType) SoundEvents.ENTITY_BEE_STING)
            .registerSupplier(SoundType.class, "entity_bee_pollinate", () -> (SoundType) SoundEvents.ENTITY_BEE_POLLINATE)
            .registerSupplier(SoundType.class, "block_beehive_drop", () -> (SoundType) SoundEvents.BLOCK_BEEHIVE_DROP)
            .registerSupplier(SoundType.class, "block_beehive_enter", () -> (SoundType) SoundEvents.BLOCK_BEEHIVE_ENTER)
            .registerSupplier(SoundType.class, "block_beehive_exit", () -> (SoundType) SoundEvents.BLOCK_BEEHIVE_EXIT)
            .registerSupplier(SoundType.class, "block_beehive_shear", () -> (SoundType) SoundEvents.BLOCK_BEEHIVE_SHEAR)
            .registerSupplier(SoundType.class, "block_beehive_work", () -> (SoundType) SoundEvents.BLOCK_BEEHIVE_WORK)
            .registerSupplier(SoundType.class, "block_bell_use", () -> (SoundType) SoundEvents.BLOCK_BELL_USE)
            .registerSupplier(SoundType.class, "block_bell_resonate", () -> (SoundType) SoundEvents.BLOCK_BELL_RESONATE)
            .registerSupplier(SoundType.class, "entity_blaze_ambient", () -> (SoundType) SoundEvents.ENTITY_BLAZE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_blaze_burn", () -> (SoundType) SoundEvents.ENTITY_BLAZE_BURN)
            .registerSupplier(SoundType.class, "entity_blaze_death", () -> (SoundType) SoundEvents.ENTITY_BLAZE_DEATH)
            .registerSupplier(SoundType.class, "entity_blaze_hurt", () -> (SoundType) SoundEvents.ENTITY_BLAZE_HURT)
            .registerSupplier(SoundType.class, "entity_blaze_shoot", () -> (SoundType) SoundEvents.ENTITY_BLAZE_SHOOT)
            .registerSupplier(SoundType.class, "entity_boat_paddle_land", () -> (SoundType) SoundEvents.ENTITY_BOAT_PADDLE_LAND)
            .registerSupplier(SoundType.class, "entity_boat_paddle_water", () -> (SoundType) SoundEvents.ENTITY_BOAT_PADDLE_WATER)
            .registerSupplier(SoundType.class, "item_book_page_turn", () -> (SoundType) SoundEvents.ITEM_BOOK_PAGE_TURN)
            .registerSupplier(SoundType.class, "item_book_put", () -> (SoundType) SoundEvents.ITEM_BOOK_PUT)
            .registerSupplier(SoundType.class, "entity_fishing_bobber_retrieve", () -> (SoundType) SoundEvents.ENTITY_FISHING_BOBBER_RETRIEVE)
            .registerSupplier(SoundType.class, "entity_fishing_bobber_splash", () -> (SoundType) SoundEvents.ENTITY_FISHING_BOBBER_SPLASH)
            .registerSupplier(SoundType.class, "entity_fishing_bobber_throw", () -> (SoundType) SoundEvents.ENTITY_FISHING_BOBBER_THROW)
            .registerSupplier(SoundType.class, "block_blastfurnace_fire_crackle", () -> (SoundType) SoundEvents.BLOCK_BLASTFURNACE_FIRE_CRACKLE)
            .registerSupplier(SoundType.class, "item_bottle_empty", () -> (SoundType) SoundEvents.ITEM_BOTTLE_EMPTY)
            .registerSupplier(SoundType.class, "item_bottle_fill", () -> (SoundType) SoundEvents.ITEM_BOTTLE_FILL)
            .registerSupplier(SoundType.class, "item_bottle_fill_dragonbreath", () -> (SoundType) SoundEvents.ITEM_BOTTLE_FILL_DRAGONBREATH)
            .registerSupplier(SoundType.class, "block_brewing_stand_brew", () -> (SoundType) SoundEvents.BLOCK_BREWING_STAND_BREW)
            .registerSupplier(SoundType.class, "block_bubble_column_bubble_pop", () -> (SoundType) SoundEvents.BLOCK_BUBBLE_COLUMN_BUBBLE_POP)
            .registerSupplier(SoundType.class, "block_bubble_column_upwards_ambient", () -> (SoundType) SoundEvents.BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT)
            .registerSupplier(SoundType.class, "block_bubble_column_upwards_inside", () -> (SoundType) SoundEvents.BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE)
            .registerSupplier(SoundType.class, "block_bubble_column_whirlpool_ambient", () -> (SoundType) SoundEvents.BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT)
            .registerSupplier(SoundType.class, "block_bubble_column_whirlpool_inside", () -> (SoundType) SoundEvents.BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE)
            .registerSupplier(SoundType.class, "item_bucket_empty", () -> (SoundType) SoundEvents.ITEM_BUCKET_EMPTY)
            .registerSupplier(SoundType.class, "item_bucket_empty_fish", () -> (SoundType) SoundEvents.ITEM_BUCKET_EMPTY_FISH)
            .registerSupplier(SoundType.class, "item_bucket_empty_lava", () -> (SoundType) SoundEvents.ITEM_BUCKET_EMPTY_LAVA)
            .registerSupplier(SoundType.class, "item_bucket_fill", () -> (SoundType) SoundEvents.ITEM_BUCKET_FILL)
            .registerSupplier(SoundType.class, "item_bucket_fill_fish", () -> (SoundType) SoundEvents.ITEM_BUCKET_FILL_FISH)
            .registerSupplier(SoundType.class, "item_bucket_fill_lava", () -> (SoundType) SoundEvents.ITEM_BUCKET_FILL_LAVA)
            .registerSupplier(SoundType.class, "block_campfire_crackle", () -> (SoundType) SoundEvents.BLOCK_CAMPFIRE_CRACKLE)
            .registerSupplier(SoundType.class, "entity_cat_ambient", () -> (SoundType) SoundEvents.ENTITY_CAT_AMBIENT)
            .registerSupplier(SoundType.class, "entity_cat_stray_ambient", () -> (SoundType) SoundEvents.ENTITY_CAT_STRAY_AMBIENT)
            .registerSupplier(SoundType.class, "entity_cat_death", () -> (SoundType) SoundEvents.ENTITY_CAT_DEATH)
            .registerSupplier(SoundType.class, "entity_cat_eat", () -> (SoundType) SoundEvents.ENTITY_CAT_EAT)
            .registerSupplier(SoundType.class, "entity_cat_hiss", () -> (SoundType) SoundEvents.ENTITY_CAT_HISS)
            .registerSupplier(SoundType.class, "entity_cat_beg_for_food", () -> (SoundType) SoundEvents.ENTITY_CAT_BEG_FOR_FOOD)
            .registerSupplier(SoundType.class, "entity_cat_hurt", () -> (SoundType) SoundEvents.ENTITY_CAT_HURT)
            .registerSupplier(SoundType.class, "entity_cat_purr", () -> (SoundType) SoundEvents.ENTITY_CAT_PURR)
            .registerSupplier(SoundType.class, "entity_cat_purreow", () -> (SoundType) SoundEvents.ENTITY_CAT_PURREOW)
            .registerSupplier(SoundType.class, "block_chest_close", () -> (SoundType) SoundEvents.BLOCK_CHEST_CLOSE)
            .registerSupplier(SoundType.class, "block_chest_locked", () -> (SoundType) SoundEvents.BLOCK_CHEST_LOCKED)
            .registerSupplier(SoundType.class, "block_chest_open", () -> (SoundType) SoundEvents.BLOCK_CHEST_OPEN)
            .registerSupplier(SoundType.class, "entity_chicken_ambient", () -> (SoundType) SoundEvents.ENTITY_CHICKEN_AMBIENT)
            .registerSupplier(SoundType.class, "entity_chicken_death", () -> (SoundType) SoundEvents.ENTITY_CHICKEN_DEATH)
            .registerSupplier(SoundType.class, "entity_chicken_egg", () -> (SoundType) SoundEvents.ENTITY_CHICKEN_EGG)
            .registerSupplier(SoundType.class, "entity_chicken_hurt", () -> (SoundType) SoundEvents.ENTITY_CHICKEN_HURT)
            .registerSupplier(SoundType.class, "entity_chicken_step", () -> (SoundType) SoundEvents.ENTITY_CHICKEN_STEP)
            .registerSupplier(SoundType.class, "block_chorus_flower_death", () -> (SoundType) SoundEvents.BLOCK_CHORUS_FLOWER_DEATH)
            .registerSupplier(SoundType.class, "block_chorus_flower_grow", () -> (SoundType) SoundEvents.BLOCK_CHORUS_FLOWER_GROW)
            .registerSupplier(SoundType.class, "item_chorus_fruit_teleport", () -> (SoundType) SoundEvents.ITEM_CHORUS_FRUIT_TELEPORT)
            .registerSupplier(SoundType.class, "block_wool_break", () -> (SoundType) SoundEvents.BLOCK_WOOL_BREAK)
            .registerSupplier(SoundType.class, "block_wool_fall", () -> (SoundType) SoundEvents.BLOCK_WOOL_FALL)
            .registerSupplier(SoundType.class, "block_wool_hit", () -> (SoundType) SoundEvents.BLOCK_WOOL_HIT)
            .registerSupplier(SoundType.class, "block_wool_place", () -> (SoundType) SoundEvents.BLOCK_WOOL_PLACE)
            .registerSupplier(SoundType.class, "block_wool_step", () -> (SoundType) SoundEvents.BLOCK_WOOL_STEP)
            .registerSupplier(SoundType.class, "entity_cod_ambient", () -> (SoundType) SoundEvents.ENTITY_COD_AMBIENT)
            .registerSupplier(SoundType.class, "entity_cod_death", () -> (SoundType) SoundEvents.ENTITY_COD_DEATH)
            .registerSupplier(SoundType.class, "entity_cod_flop", () -> (SoundType) SoundEvents.ENTITY_COD_FLOP)
            .registerSupplier(SoundType.class, "entity_cod_hurt", () -> (SoundType) SoundEvents.ENTITY_COD_HURT)
            .registerSupplier(SoundType.class, "block_comparator_click", () -> (SoundType) SoundEvents.BLOCK_COMPARATOR_CLICK)
            .registerSupplier(SoundType.class, "block_composter_empty", () -> (SoundType) SoundEvents.BLOCK_COMPOSTER_EMPTY)
            .registerSupplier(SoundType.class, "block_composter_fill", () -> (SoundType) SoundEvents.BLOCK_COMPOSTER_FILL)
            .registerSupplier(SoundType.class, "block_composter_fill_success", () -> (SoundType) SoundEvents.BLOCK_COMPOSTER_FILL_SUCCESS)
            .registerSupplier(SoundType.class, "block_composter_ready", () -> (SoundType) SoundEvents.BLOCK_COMPOSTER_READY)
            .registerSupplier(SoundType.class, "block_conduit_activate", () -> (SoundType) SoundEvents.BLOCK_CONDUIT_ACTIVATE)
            .registerSupplier(SoundType.class, "block_conduit_ambient", () -> (SoundType) SoundEvents.BLOCK_CONDUIT_AMBIENT)
            .registerSupplier(SoundType.class, "block_conduit_ambient_short", () -> (SoundType) SoundEvents.BLOCK_CONDUIT_AMBIENT_SHORT)
            .registerSupplier(SoundType.class, "block_conduit_attack_target", () -> (SoundType) SoundEvents.BLOCK_CONDUIT_ATTACK_TARGET)
            .registerSupplier(SoundType.class, "block_conduit_deactivate", () -> (SoundType) SoundEvents.BLOCK_CONDUIT_DEACTIVATE)
            .registerSupplier(SoundType.class, "entity_cow_ambient", () -> (SoundType) SoundEvents.ENTITY_COW_AMBIENT)
            .registerSupplier(SoundType.class, "entity_cow_death", () -> (SoundType) SoundEvents.ENTITY_COW_DEATH)
            .registerSupplier(SoundType.class, "entity_cow_hurt", () -> (SoundType) SoundEvents.ENTITY_COW_HURT)
            .registerSupplier(SoundType.class, "entity_cow_milk", () -> (SoundType) SoundEvents.ENTITY_COW_MILK)
            .registerSupplier(SoundType.class, "entity_cow_step", () -> (SoundType) SoundEvents.ENTITY_COW_STEP)
            .registerSupplier(SoundType.class, "entity_creeper_death", () -> (SoundType) SoundEvents.ENTITY_CREEPER_DEATH)
            .registerSupplier(SoundType.class, "entity_creeper_hurt", () -> (SoundType) SoundEvents.ENTITY_CREEPER_HURT)
            .registerSupplier(SoundType.class, "entity_creeper_primed", () -> (SoundType) SoundEvents.ENTITY_CREEPER_PRIMED)
            .registerSupplier(SoundType.class, "block_crop_break", () -> (SoundType) SoundEvents.BLOCK_CROP_BREAK)
            .registerSupplier(SoundType.class, "item_crop_plant", () -> (SoundType) SoundEvents.ITEM_CROP_PLANT)
            .registerSupplier(SoundType.class, "item_crossbow_hit", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_HIT)
            .registerSupplier(SoundType.class, "item_crossbow_loading_end", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_LOADING_END)
            .registerSupplier(SoundType.class, "item_crossbow_loading_middle", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_LOADING_MIDDLE)
            .registerSupplier(SoundType.class, "item_crossbow_loading_start", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_LOADING_START)
            .registerSupplier(SoundType.class, "item_crossbow_quick_charge_1", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_QUICK_CHARGE_1)
            .registerSupplier(SoundType.class, "item_crossbow_quick_charge_2", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_QUICK_CHARGE_2)
            .registerSupplier(SoundType.class, "item_crossbow_quick_charge_3", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_QUICK_CHARGE_3)
            .registerSupplier(SoundType.class, "item_crossbow_shoot", () -> (SoundType) SoundEvents.ITEM_CROSSBOW_SHOOT)
            .registerSupplier(SoundType.class, "block_dispenser_dispense", () -> (SoundType) SoundEvents.BLOCK_DISPENSER_DISPENSE)
            .registerSupplier(SoundType.class, "block_dispenser_fail", () -> (SoundType) SoundEvents.BLOCK_DISPENSER_FAIL)
            .registerSupplier(SoundType.class, "block_dispenser_launch", () -> (SoundType) SoundEvents.BLOCK_DISPENSER_LAUNCH)
            .registerSupplier(SoundType.class, "entity_dolphin_ambient", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_AMBIENT)
            .registerSupplier(SoundType.class, "entity_dolphin_ambient_water", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_AMBIENT_WATER)
            .registerSupplier(SoundType.class, "entity_dolphin_attack", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_ATTACK)
            .registerSupplier(SoundType.class, "entity_dolphin_death", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_DEATH)
            .registerSupplier(SoundType.class, "entity_dolphin_eat", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_EAT)
            .registerSupplier(SoundType.class, "entity_dolphin_hurt", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_HURT)
            .registerSupplier(SoundType.class, "entity_dolphin_jump", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_JUMP)
            .registerSupplier(SoundType.class, "entity_dolphin_play", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_PLAY)
            .registerSupplier(SoundType.class, "entity_dolphin_splash", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_SPLASH)
            .registerSupplier(SoundType.class, "entity_dolphin_swim", () -> (SoundType) SoundEvents.ENTITY_DOLPHIN_SWIM)
            .registerSupplier(SoundType.class, "entity_donkey_ambient", () -> (SoundType) SoundEvents.ENTITY_DONKEY_AMBIENT)
            .registerSupplier(SoundType.class, "entity_donkey_angry", () -> (SoundType) SoundEvents.ENTITY_DONKEY_ANGRY)
            .registerSupplier(SoundType.class, "entity_donkey_chest", () -> (SoundType) SoundEvents.ENTITY_DONKEY_CHEST)
            .registerSupplier(SoundType.class, "entity_donkey_death", () -> (SoundType) SoundEvents.ENTITY_DONKEY_DEATH)
            .registerSupplier(SoundType.class, "entity_donkey_hurt", () -> (SoundType) SoundEvents.ENTITY_DONKEY_HURT)
            .registerSupplier(SoundType.class, "entity_drowned_ambient", () -> (SoundType) SoundEvents.ENTITY_DROWNED_AMBIENT)
            .registerSupplier(SoundType.class, "entity_drowned_ambient_water", () -> (SoundType) SoundEvents.ENTITY_DROWNED_AMBIENT_WATER)
            .registerSupplier(SoundType.class, "entity_drowned_death", () -> (SoundType) SoundEvents.ENTITY_DROWNED_DEATH)
            .registerSupplier(SoundType.class, "entity_drowned_death_water", () -> (SoundType) SoundEvents.ENTITY_DROWNED_DEATH_WATER)
            .registerSupplier(SoundType.class, "entity_drowned_hurt", () -> (SoundType) SoundEvents.ENTITY_DROWNED_HURT)
            .registerSupplier(SoundType.class, "entity_drowned_hurt_water", () -> (SoundType) SoundEvents.ENTITY_DROWNED_HURT_WATER)
            .registerSupplier(SoundType.class, "entity_drowned_shoot", () -> (SoundType) SoundEvents.ENTITY_DROWNED_SHOOT)
            .registerSupplier(SoundType.class, "entity_drowned_step", () -> (SoundType) SoundEvents.ENTITY_DROWNED_STEP)
            .registerSupplier(SoundType.class, "entity_drowned_swim", () -> (SoundType) SoundEvents.ENTITY_DROWNED_SWIM)
            .registerSupplier(SoundType.class, "entity_egg_throw", () -> (SoundType) SoundEvents.ENTITY_EGG_THROW)
            .registerSupplier(SoundType.class, "entity_elder_guardian_ambient", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_AMBIENT)
            .registerSupplier(SoundType.class, "entity_elder_guardian_ambient_land", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_AMBIENT_LAND)
            .registerSupplier(SoundType.class, "entity_elder_guardian_curse", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_CURSE)
            .registerSupplier(SoundType.class, "entity_elder_guardian_death", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_DEATH)
            .registerSupplier(SoundType.class, "entity_elder_guardian_death_land", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_DEATH_LAND)
            .registerSupplier(SoundType.class, "entity_elder_guardian_flop", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_FLOP)
            .registerSupplier(SoundType.class, "entity_elder_guardian_hurt", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_HURT)
            .registerSupplier(SoundType.class, "entity_elder_guardian_hurt_land", () -> (SoundType) SoundEvents.ENTITY_ELDER_GUARDIAN_HURT_LAND)
            .registerSupplier(SoundType.class, "item_elytra_flying", () -> (SoundType) SoundEvents.ITEM_ELYTRA_FLYING)
            .registerSupplier(SoundType.class, "block_enchantment_table_use", () -> (SoundType) SoundEvents.BLOCK_ENCHANTMENT_TABLE_USE)
            .registerSupplier(SoundType.class, "block_ender_chest_close", () -> (SoundType) SoundEvents.BLOCK_ENDER_CHEST_CLOSE)
            .registerSupplier(SoundType.class, "block_ender_chest_open", () -> (SoundType) SoundEvents.BLOCK_ENDER_CHEST_OPEN)
            .registerSupplier(SoundType.class, "entity_ender_dragon_ambient", () -> (SoundType) SoundEvents.ENTITY_ENDER_DRAGON_AMBIENT)
            .registerSupplier(SoundType.class, "entity_ender_dragon_death", () -> (SoundType) SoundEvents.ENTITY_ENDER_DRAGON_DEATH)
            .registerSupplier(SoundType.class, "entity_dragon_fireball_explode", () -> (SoundType) SoundEvents.ENTITY_DRAGON_FIREBALL_EXPLODE)
            .registerSupplier(SoundType.class, "entity_ender_dragon_flap", () -> (SoundType) SoundEvents.ENTITY_ENDER_DRAGON_FLAP)
            .registerSupplier(SoundType.class, "entity_ender_dragon_growl", () -> (SoundType) SoundEvents.ENTITY_ENDER_DRAGON_GROWL)
            .registerSupplier(SoundType.class, "entity_ender_dragon_hurt", () -> (SoundType) SoundEvents.ENTITY_ENDER_DRAGON_HURT)
            .registerSupplier(SoundType.class, "entity_ender_dragon_shoot", () -> (SoundType) SoundEvents.ENTITY_ENDER_DRAGON_SHOOT)
            .registerSupplier(SoundType.class, "entity_ender_eye_death", () -> (SoundType) SoundEvents.ENTITY_ENDER_EYE_DEATH)
            .registerSupplier(SoundType.class, "entity_ender_eye_launch", () -> (SoundType) SoundEvents.ENTITY_ENDER_EYE_LAUNCH)
            .registerSupplier(SoundType.class, "entity_enderman_ambient", () -> (SoundType) SoundEvents.ENTITY_ENDERMAN_AMBIENT)
            .registerSupplier(SoundType.class, "entity_enderman_death", () -> (SoundType) SoundEvents.ENTITY_ENDERMAN_DEATH)
            .registerSupplier(SoundType.class, "entity_enderman_hurt", () -> (SoundType) SoundEvents.ENTITY_ENDERMAN_HURT)
            .registerSupplier(SoundType.class, "entity_enderman_scream", () -> (SoundType) SoundEvents.ENTITY_ENDERMAN_SCREAM)
            .registerSupplier(SoundType.class, "entity_enderman_stare", () -> (SoundType) SoundEvents.ENTITY_ENDERMAN_STARE)
            .registerSupplier(SoundType.class, "entity_enderman_teleport", () -> (SoundType) SoundEvents.ENTITY_ENDERMAN_TELEPORT)
            .registerSupplier(SoundType.class, "entity_endermite_ambient", () -> (SoundType) SoundEvents.ENTITY_ENDERMITE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_endermite_death", () -> (SoundType) SoundEvents.ENTITY_ENDERMITE_DEATH)
            .registerSupplier(SoundType.class, "entity_endermite_hurt", () -> (SoundType) SoundEvents.ENTITY_ENDERMITE_HURT)
            .registerSupplier(SoundType.class, "entity_endermite_step", () -> (SoundType) SoundEvents.ENTITY_ENDERMITE_STEP)
            .registerSupplier(SoundType.class, "entity_ender_pearl_throw", () -> (SoundType) SoundEvents.ENTITY_ENDER_PEARL_THROW)
            .registerSupplier(SoundType.class, "block_end_gateway_spawn", () -> (SoundType) SoundEvents.BLOCK_END_GATEWAY_SPAWN)
            .registerSupplier(SoundType.class, "block_end_portal_frame_fill", () -> (SoundType) SoundEvents.BLOCK_END_PORTAL_FRAME_FILL)
            .registerSupplier(SoundType.class, "block_end_portal_spawn", () -> (SoundType) SoundEvents.BLOCK_END_PORTAL_SPAWN)
            .registerSupplier(SoundType.class, "entity_evoker_ambient", () -> (SoundType) SoundEvents.ENTITY_EVOKER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_evoker_cast_spell", () -> (SoundType) SoundEvents.ENTITY_EVOKER_CAST_SPELL)
            .registerSupplier(SoundType.class, "entity_evoker_celebrate", () -> (SoundType) SoundEvents.ENTITY_EVOKER_CELEBRATE)
            .registerSupplier(SoundType.class, "entity_evoker_death", () -> (SoundType) SoundEvents.ENTITY_EVOKER_DEATH)
            .registerSupplier(SoundType.class, "entity_evoker_fangs_attack", () -> (SoundType) SoundEvents.ENTITY_EVOKER_FANGS_ATTACK)
            .registerSupplier(SoundType.class, "entity_evoker_hurt", () -> (SoundType) SoundEvents.ENTITY_EVOKER_HURT)
            .registerSupplier(SoundType.class, "entity_evoker_prepare_attack", () -> (SoundType) SoundEvents.ENTITY_EVOKER_PREPARE_ATTACK)
            .registerSupplier(SoundType.class, "entity_evoker_prepare_summon", () -> (SoundType) SoundEvents.ENTITY_EVOKER_PREPARE_SUMMON)
            .registerSupplier(SoundType.class, "entity_evoker_prepare_wololo", () -> (SoundType) SoundEvents.ENTITY_EVOKER_PREPARE_WOLOLO)
            .registerSupplier(SoundType.class, "entity_experience_bottle_throw", () -> (SoundType) SoundEvents.ENTITY_EXPERIENCE_BOTTLE_THROW)
            .registerSupplier(SoundType.class, "entity_experience_orb_pickup", () -> (SoundType) SoundEvents.ENTITY_EXPERIENCE_ORB_PICKUP)
            .registerSupplier(SoundType.class, "block_fence_gate_close", () -> (SoundType) SoundEvents.BLOCK_FENCE_GATE_CLOSE)
            .registerSupplier(SoundType.class, "block_fence_gate_open", () -> (SoundType) SoundEvents.BLOCK_FENCE_GATE_OPEN)
            .registerSupplier(SoundType.class, "item_firecharge_use", () -> (SoundType) SoundEvents.ITEM_FIRECHARGE_USE)
            .registerSupplier(SoundType.class, "entity_firework_rocket_blast", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_BLAST)
            .registerSupplier(SoundType.class, "entity_firework_rocket_blast_far", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_BLAST_FAR)
            .registerSupplier(SoundType.class, "entity_firework_rocket_large_blast", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_LARGE_BLAST)
            .registerSupplier(SoundType.class, "entity_firework_rocket_large_blast_far", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR)
            .registerSupplier(SoundType.class, "entity_firework_rocket_launch", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_LAUNCH)
            .registerSupplier(SoundType.class, "entity_firework_rocket_shoot", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_SHOOT)
            .registerSupplier(SoundType.class, "entity_firework_rocket_twinkle", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_TWINKLE)
            .registerSupplier(SoundType.class, "entity_firework_rocket_twinkle_far", () -> (SoundType) SoundEvents.ENTITY_FIREWORK_ROCKET_TWINKLE_FAR)
            .registerSupplier(SoundType.class, "block_fire_ambient", () -> (SoundType) SoundEvents.BLOCK_FIRE_AMBIENT)
            .registerSupplier(SoundType.class, "block_fire_extinguish", () -> (SoundType) SoundEvents.BLOCK_FIRE_EXTINGUISH)
            .registerSupplier(SoundType.class, "entity_fish_swim", () -> (SoundType) SoundEvents.ENTITY_FISH_SWIM)
            .registerSupplier(SoundType.class, "item_flintandsteel_use", () -> (SoundType) SoundEvents.ITEM_FLINTANDSTEEL_USE)
            .registerSupplier(SoundType.class, "entity_fox_aggro", () -> (SoundType) SoundEvents.ENTITY_FOX_AGGRO)
            .registerSupplier(SoundType.class, "entity_fox_ambient", () -> (SoundType) SoundEvents.ENTITY_FOX_AMBIENT)
            .registerSupplier(SoundType.class, "entity_fox_bite", () -> (SoundType) SoundEvents.ENTITY_FOX_BITE)
            .registerSupplier(SoundType.class, "entity_fox_death", () -> (SoundType) SoundEvents.ENTITY_FOX_DEATH)
            .registerSupplier(SoundType.class, "entity_fox_eat", () -> (SoundType) SoundEvents.ENTITY_FOX_EAT)
            .registerSupplier(SoundType.class, "entity_fox_hurt", () -> (SoundType) SoundEvents.ENTITY_FOX_HURT)
            .registerSupplier(SoundType.class, "entity_fox_screech", () -> (SoundType) SoundEvents.ENTITY_FOX_SCREECH)
            .registerSupplier(SoundType.class, "entity_fox_sleep", () -> (SoundType) SoundEvents.ENTITY_FOX_SLEEP)
            .registerSupplier(SoundType.class, "entity_fox_sniff", () -> (SoundType) SoundEvents.ENTITY_FOX_SNIFF)
            .registerSupplier(SoundType.class, "entity_fox_spit", () -> (SoundType) SoundEvents.ENTITY_FOX_SPIT)
            .registerSupplier(SoundType.class, "block_furnace_fire_crackle", () -> (SoundType) SoundEvents.BLOCK_FURNACE_FIRE_CRACKLE)
            .registerSupplier(SoundType.class, "entity_generic_big_fall", () -> (SoundType) SoundEvents.ENTITY_GENERIC_BIG_FALL)
            .registerSupplier(SoundType.class, "entity_generic_burn", () -> (SoundType) SoundEvents.ENTITY_GENERIC_BURN)
            .registerSupplier(SoundType.class, "entity_generic_death", () -> (SoundType) SoundEvents.ENTITY_GENERIC_DEATH)
            .registerSupplier(SoundType.class, "entity_generic_drink", () -> (SoundType) SoundEvents.ENTITY_GENERIC_DRINK)
            .registerSupplier(SoundType.class, "entity_generic_eat", () -> (SoundType) SoundEvents.ENTITY_GENERIC_EAT)
            .registerSupplier(SoundType.class, "entity_generic_explode", () -> (SoundType) SoundEvents.ENTITY_GENERIC_EXPLODE)
            .registerSupplier(SoundType.class, "entity_generic_extinguish_fire", () -> (SoundType) SoundEvents.ENTITY_GENERIC_EXTINGUISH_FIRE)
            .registerSupplier(SoundType.class, "entity_generic_hurt", () -> (SoundType) SoundEvents.ENTITY_GENERIC_HURT)
            .registerSupplier(SoundType.class, "entity_generic_small_fall", () -> (SoundType) SoundEvents.ENTITY_GENERIC_SMALL_FALL)
            .registerSupplier(SoundType.class, "entity_generic_splash", () -> (SoundType) SoundEvents.ENTITY_GENERIC_SPLASH)
            .registerSupplier(SoundType.class, "entity_generic_swim", () -> (SoundType) SoundEvents.ENTITY_GENERIC_SWIM)
            .registerSupplier(SoundType.class, "entity_ghast_ambient", () -> (SoundType) SoundEvents.ENTITY_GHAST_AMBIENT)
            .registerSupplier(SoundType.class, "entity_ghast_death", () -> (SoundType) SoundEvents.ENTITY_GHAST_DEATH)
            .registerSupplier(SoundType.class, "entity_ghast_hurt", () -> (SoundType) SoundEvents.ENTITY_GHAST_HURT)
            .registerSupplier(SoundType.class, "entity_ghast_scream", () -> (SoundType) SoundEvents.ENTITY_GHAST_SCREAM)
            .registerSupplier(SoundType.class, "entity_ghast_shoot", () -> (SoundType) SoundEvents.ENTITY_GHAST_SHOOT)
            .registerSupplier(SoundType.class, "entity_ghast_warn", () -> (SoundType) SoundEvents.ENTITY_GHAST_WARN)
            .registerSupplier(SoundType.class, "block_glass_break", () -> (SoundType) SoundEvents.BLOCK_GLASS_BREAK)
            .registerSupplier(SoundType.class, "block_glass_fall", () -> (SoundType) SoundEvents.BLOCK_GLASS_FALL)
            .registerSupplier(SoundType.class, "block_glass_hit", () -> (SoundType) SoundEvents.BLOCK_GLASS_HIT)
            .registerSupplier(SoundType.class, "block_glass_place", () -> (SoundType) SoundEvents.BLOCK_GLASS_PLACE)
            .registerSupplier(SoundType.class, "block_glass_step", () -> (SoundType) SoundEvents.BLOCK_GLASS_STEP)
            .registerSupplier(SoundType.class, "block_grass_break", () -> (SoundType) SoundEvents.BLOCK_GRASS_BREAK)
            .registerSupplier(SoundType.class, "block_grass_fall", () -> (SoundType) SoundEvents.BLOCK_GRASS_FALL)
            .registerSupplier(SoundType.class, "block_grass_hit", () -> (SoundType) SoundEvents.BLOCK_GRASS_HIT)
            .registerSupplier(SoundType.class, "block_grass_place", () -> (SoundType) SoundEvents.BLOCK_GRASS_PLACE)
            .registerSupplier(SoundType.class, "block_grass_step", () -> (SoundType) SoundEvents.BLOCK_GRASS_STEP)
            .registerSupplier(SoundType.class, "block_wet_grass_break", () -> (SoundType) SoundEvents.BLOCK_WET_GRASS_BREAK)
            .registerSupplier(SoundType.class, "block_wet_grass_fall", () -> (SoundType) SoundEvents.BLOCK_WET_GRASS_FALL)
            .registerSupplier(SoundType.class, "block_wet_grass_hit", () -> (SoundType) SoundEvents.BLOCK_WET_GRASS_HIT)
            .registerSupplier(SoundType.class, "block_wet_grass_place", () -> (SoundType) SoundEvents.BLOCK_WET_GRASS_PLACE)
            .registerSupplier(SoundType.class, "block_wet_grass_step", () -> (SoundType) SoundEvents.BLOCK_WET_GRASS_STEP)
            .registerSupplier(SoundType.class, "block_coral_block_break", () -> (SoundType) SoundEvents.BLOCK_CORAL_BLOCK_BREAK)
            .registerSupplier(SoundType.class, "block_coral_block_fall", () -> (SoundType) SoundEvents.BLOCK_CORAL_BLOCK_FALL)
            .registerSupplier(SoundType.class, "block_coral_block_hit", () -> (SoundType) SoundEvents.BLOCK_CORAL_BLOCK_HIT)
            .registerSupplier(SoundType.class, "block_coral_block_place", () -> (SoundType) SoundEvents.BLOCK_CORAL_BLOCK_PLACE)
            .registerSupplier(SoundType.class, "block_coral_block_step", () -> (SoundType) SoundEvents.BLOCK_CORAL_BLOCK_STEP)
            .registerSupplier(SoundType.class, "block_gravel_break", () -> (SoundType) SoundEvents.BLOCK_GRAVEL_BREAK)
            .registerSupplier(SoundType.class, "block_gravel_fall", () -> (SoundType) SoundEvents.BLOCK_GRAVEL_FALL)
            .registerSupplier(SoundType.class, "block_gravel_hit", () -> (SoundType) SoundEvents.BLOCK_GRAVEL_HIT)
            .registerSupplier(SoundType.class, "block_gravel_place", () -> (SoundType) SoundEvents.BLOCK_GRAVEL_PLACE)
            .registerSupplier(SoundType.class, "block_gravel_step", () -> (SoundType) SoundEvents.BLOCK_GRAVEL_STEP)
            .registerSupplier(SoundType.class, "block_grindstone_use", () -> (SoundType) SoundEvents.BLOCK_GRINDSTONE_USE)
            .registerSupplier(SoundType.class, "entity_guardian_ambient", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_AMBIENT)
            .registerSupplier(SoundType.class, "entity_guardian_ambient_land", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_AMBIENT_LAND)
            .registerSupplier(SoundType.class, "entity_guardian_attack", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_ATTACK)
            .registerSupplier(SoundType.class, "entity_guardian_death", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_DEATH)
            .registerSupplier(SoundType.class, "entity_guardian_death_land", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_DEATH_LAND)
            .registerSupplier(SoundType.class, "entity_guardian_flop", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_FLOP)
            .registerSupplier(SoundType.class, "entity_guardian_hurt", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_HURT)
            .registerSupplier(SoundType.class, "entity_guardian_hurt_land", () -> (SoundType) SoundEvents.ENTITY_GUARDIAN_HURT_LAND)
            .registerSupplier(SoundType.class, "item_hoe_till", () -> (SoundType) SoundEvents.ITEM_HOE_TILL)
            .registerSupplier(SoundType.class, "entity_horse_ambient", () -> (SoundType) SoundEvents.ENTITY_HORSE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_horse_angry", () -> (SoundType) SoundEvents.ENTITY_HORSE_ANGRY)
            .registerSupplier(SoundType.class, "entity_horse_armor", () -> (SoundType) SoundEvents.ENTITY_HORSE_ARMOR)
            .registerSupplier(SoundType.class, "entity_horse_breathe", () -> (SoundType) SoundEvents.ENTITY_HORSE_BREATHE)
            .registerSupplier(SoundType.class, "entity_horse_death", () -> (SoundType) SoundEvents.ENTITY_HORSE_DEATH)
            .registerSupplier(SoundType.class, "entity_horse_eat", () -> (SoundType) SoundEvents.ENTITY_HORSE_EAT)
            .registerSupplier(SoundType.class, "entity_horse_gallop", () -> (SoundType) SoundEvents.ENTITY_HORSE_GALLOP)
            .registerSupplier(SoundType.class, "entity_horse_hurt", () -> (SoundType) SoundEvents.ENTITY_HORSE_HURT)
            .registerSupplier(SoundType.class, "entity_horse_jump", () -> (SoundType) SoundEvents.ENTITY_HORSE_JUMP)
            .registerSupplier(SoundType.class, "entity_horse_land", () -> (SoundType) SoundEvents.ENTITY_HORSE_LAND)
            .registerSupplier(SoundType.class, "entity_horse_saddle", () -> (SoundType) SoundEvents.ENTITY_HORSE_SADDLE)
            .registerSupplier(SoundType.class, "entity_horse_step", () -> (SoundType) SoundEvents.ENTITY_HORSE_STEP)
            .registerSupplier(SoundType.class, "entity_horse_step_wood", () -> (SoundType) SoundEvents.ENTITY_HORSE_STEP_WOOD)
            .registerSupplier(SoundType.class, "entity_hostile_big_fall", () -> (SoundType) SoundEvents.ENTITY_HOSTILE_BIG_FALL)
            .registerSupplier(SoundType.class, "entity_hostile_death", () -> (SoundType) SoundEvents.ENTITY_HOSTILE_DEATH)
            .registerSupplier(SoundType.class, "entity_hostile_hurt", () -> (SoundType) SoundEvents.ENTITY_HOSTILE_HURT)
            .registerSupplier(SoundType.class, "entity_hostile_small_fall", () -> (SoundType) SoundEvents.ENTITY_HOSTILE_SMALL_FALL)
            .registerSupplier(SoundType.class, "entity_hostile_splash", () -> (SoundType) SoundEvents.ENTITY_HOSTILE_SPLASH)
            .registerSupplier(SoundType.class, "entity_hostile_swim", () -> (SoundType) SoundEvents.ENTITY_HOSTILE_SWIM)
            .registerSupplier(SoundType.class, "entity_husk_ambient", () -> (SoundType) SoundEvents.ENTITY_HUSK_AMBIENT)
            .registerSupplier(SoundType.class, "entity_husk_converted_to_zombie", () -> (SoundType) SoundEvents.ENTITY_HUSK_CONVERTED_TO_ZOMBIE)
            .registerSupplier(SoundType.class, "entity_husk_death", () -> (SoundType) SoundEvents.ENTITY_HUSK_DEATH)
            .registerSupplier(SoundType.class, "entity_husk_hurt", () -> (SoundType) SoundEvents.ENTITY_HUSK_HURT)
            .registerSupplier(SoundType.class, "entity_husk_step", () -> (SoundType) SoundEvents.ENTITY_HUSK_STEP)
            .registerSupplier(SoundType.class, "entity_ravager_ambient", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_ravager_attack", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_ATTACK)
            .registerSupplier(SoundType.class, "entity_ravager_celebrate", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_CELEBRATE)
            .registerSupplier(SoundType.class, "entity_ravager_death", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_DEATH)
            .registerSupplier(SoundType.class, "entity_ravager_hurt", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_HURT)
            .registerSupplier(SoundType.class, "entity_ravager_step", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_STEP)
            .registerSupplier(SoundType.class, "entity_ravager_stunned", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_STUNNED)
            .registerSupplier(SoundType.class, "entity_ravager_roar", () -> (SoundType) SoundEvents.ENTITY_RAVAGER_ROAR)
            .registerSupplier(SoundType.class, "entity_illusioner_ambient", () -> (SoundType) SoundEvents.ENTITY_ILLUSIONER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_illusioner_cast_spell", () -> (SoundType) SoundEvents.ENTITY_ILLUSIONER_CAST_SPELL)
            .registerSupplier(SoundType.class, "entity_illusioner_death", () -> (SoundType) SoundEvents.ENTITY_ILLUSIONER_DEATH)
            .registerSupplier(SoundType.class, "entity_illusioner_hurt", () -> (SoundType) SoundEvents.ENTITY_ILLUSIONER_HURT)
            .registerSupplier(SoundType.class, "entity_illusioner_mirror_move", () -> (SoundType) SoundEvents.ENTITY_ILLUSIONER_MIRROR_MOVE)
            .registerSupplier(SoundType.class, "entity_illusioner_prepare_blindness", () -> (SoundType) SoundEvents.ENTITY_ILLUSIONER_PREPARE_BLINDNESS)
            .registerSupplier(SoundType.class, "entity_illusioner_prepare_mirror", () -> (SoundType) SoundEvents.ENTITY_ILLUSIONER_PREPARE_MIRROR)
            .registerSupplier(SoundType.class, "block_iron_door_close", () -> (SoundType) SoundEvents.BLOCK_IRON_DOOR_CLOSE)
            .registerSupplier(SoundType.class, "block_iron_door_open", () -> (SoundType) SoundEvents.BLOCK_IRON_DOOR_OPEN)
            .registerSupplier(SoundType.class, "entity_iron_golem_attack", () -> (SoundType) SoundEvents.ENTITY_IRON_GOLEM_ATTACK)
            .registerSupplier(SoundType.class, "entity_iron_golem_death", () -> (SoundType) SoundEvents.ENTITY_IRON_GOLEM_DEATH)
            .registerSupplier(SoundType.class, "entity_iron_golem_hurt", () -> (SoundType) SoundEvents.ENTITY_IRON_GOLEM_HURT)
            .registerSupplier(SoundType.class, "entity_iron_golem_step", () -> (SoundType) SoundEvents.ENTITY_IRON_GOLEM_STEP)
            .registerSupplier(SoundType.class, "block_iron_trapdoor_close", () -> (SoundType) SoundEvents.BLOCK_IRON_TRAPDOOR_CLOSE)
            .registerSupplier(SoundType.class, "block_iron_trapdoor_open", () -> (SoundType) SoundEvents.BLOCK_IRON_TRAPDOOR_OPEN)
            .registerSupplier(SoundType.class, "entity_item_frame_add_item", () -> (SoundType) SoundEvents.ENTITY_ITEM_FRAME_ADD_ITEM)
            .registerSupplier(SoundType.class, "entity_item_frame_break", () -> (SoundType) SoundEvents.ENTITY_ITEM_FRAME_BREAK)
            .registerSupplier(SoundType.class, "entity_item_frame_place", () -> (SoundType) SoundEvents.ENTITY_ITEM_FRAME_PLACE)
            .registerSupplier(SoundType.class, "entity_item_frame_remove_item", () -> (SoundType) SoundEvents.ENTITY_ITEM_FRAME_REMOVE_ITEM)
            .registerSupplier(SoundType.class, "entity_item_frame_rotate_item", () -> (SoundType) SoundEvents.ENTITY_ITEM_FRAME_ROTATE_ITEM)
            .registerSupplier(SoundType.class, "entity_item_break", () -> (SoundType) SoundEvents.ENTITY_ITEM_BREAK)
            .registerSupplier(SoundType.class, "entity_item_pickup", () -> (SoundType) SoundEvents.ENTITY_ITEM_PICKUP)
            .registerSupplier(SoundType.class, "block_ladder_break", () -> (SoundType) SoundEvents.BLOCK_LADDER_BREAK)
            .registerSupplier(SoundType.class, "block_ladder_fall", () -> (SoundType) SoundEvents.BLOCK_LADDER_FALL)
            .registerSupplier(SoundType.class, "block_ladder_hit", () -> (SoundType) SoundEvents.BLOCK_LADDER_HIT)
            .registerSupplier(SoundType.class, "block_ladder_place", () -> (SoundType) SoundEvents.BLOCK_LADDER_PLACE)
            .registerSupplier(SoundType.class, "block_ladder_step", () -> (SoundType) SoundEvents.BLOCK_LADDER_STEP)
            .registerSupplier(SoundType.class, "block_lantern_break", () -> (SoundType) SoundEvents.BLOCK_LANTERN_BREAK)
            .registerSupplier(SoundType.class, "block_lantern_fall", () -> (SoundType) SoundEvents.BLOCK_LANTERN_FALL)
            .registerSupplier(SoundType.class, "block_lantern_hit", () -> (SoundType) SoundEvents.BLOCK_LANTERN_HIT)
            .registerSupplier(SoundType.class, "block_lantern_place", () -> (SoundType) SoundEvents.BLOCK_LANTERN_PLACE)
            .registerSupplier(SoundType.class, "block_lantern_step", () -> (SoundType) SoundEvents.BLOCK_LANTERN_STEP)
            .registerSupplier(SoundType.class, "block_lava_ambient", () -> (SoundType) SoundEvents.BLOCK_LAVA_AMBIENT)
            .registerSupplier(SoundType.class, "block_lava_extinguish", () -> (SoundType) SoundEvents.BLOCK_LAVA_EXTINGUISH)
            .registerSupplier(SoundType.class, "block_lava_pop", () -> (SoundType) SoundEvents.BLOCK_LAVA_POP)
            .registerSupplier(SoundType.class, "entity_leash_knot_break", () -> (SoundType) SoundEvents.ENTITY_LEASH_KNOT_BREAK)
            .registerSupplier(SoundType.class, "entity_leash_knot_place", () -> (SoundType) SoundEvents.ENTITY_LEASH_KNOT_PLACE)
            .registerSupplier(SoundType.class, "block_lever_click", () -> (SoundType) SoundEvents.BLOCK_LEVER_CLICK)
            .registerSupplier(SoundType.class, "entity_lightning_bolt_impact", () -> (SoundType) SoundEvents.ENTITY_LIGHTNING_BOLT_IMPACT)
            .registerSupplier(SoundType.class, "entity_lightning_bolt_thunder", () -> (SoundType) SoundEvents.ENTITY_LIGHTNING_BOLT_THUNDER)
            .registerSupplier(SoundType.class, "entity_lingering_potion_throw", () -> (SoundType) SoundEvents.ENTITY_LINGERING_POTION_THROW)
            .registerSupplier(SoundType.class, "entity_llama_ambient", () -> (SoundType) SoundEvents.ENTITY_LLAMA_AMBIENT)
            .registerSupplier(SoundType.class, "entity_llama_angry", () -> (SoundType) SoundEvents.ENTITY_LLAMA_ANGRY)
            .registerSupplier(SoundType.class, "entity_llama_chest", () -> (SoundType) SoundEvents.ENTITY_LLAMA_CHEST)
            .registerSupplier(SoundType.class, "entity_llama_death", () -> (SoundType) SoundEvents.ENTITY_LLAMA_DEATH)
            .registerSupplier(SoundType.class, "entity_llama_eat", () -> (SoundType) SoundEvents.ENTITY_LLAMA_EAT)
            .registerSupplier(SoundType.class, "entity_llama_hurt", () -> (SoundType) SoundEvents.ENTITY_LLAMA_HURT)
            .registerSupplier(SoundType.class, "entity_llama_spit", () -> (SoundType) SoundEvents.ENTITY_LLAMA_SPIT)
            .registerSupplier(SoundType.class, "entity_llama_step", () -> (SoundType) SoundEvents.ENTITY_LLAMA_STEP)
            .registerSupplier(SoundType.class, "entity_llama_swag", () -> (SoundType) SoundEvents.ENTITY_LLAMA_SWAG)
            .registerSupplier(SoundType.class, "entity_magma_cube_death", () -> (SoundType) SoundEvents.ENTITY_MAGMA_CUBE_DEATH)
            .registerSupplier(SoundType.class, "entity_magma_cube_hurt", () -> (SoundType) SoundEvents.ENTITY_MAGMA_CUBE_HURT)
            .registerSupplier(SoundType.class, "entity_magma_cube_jump", () -> (SoundType) SoundEvents.ENTITY_MAGMA_CUBE_JUMP)
            .registerSupplier(SoundType.class, "entity_magma_cube_squish", () -> (SoundType) SoundEvents.ENTITY_MAGMA_CUBE_SQUISH)
            .registerSupplier(SoundType.class, "block_metal_break", () -> (SoundType) SoundEvents.BLOCK_METAL_BREAK)
            .registerSupplier(SoundType.class, "block_metal_fall", () -> (SoundType) SoundEvents.BLOCK_METAL_FALL)
            .registerSupplier(SoundType.class, "block_metal_hit", () -> (SoundType) SoundEvents.BLOCK_METAL_HIT)
            .registerSupplier(SoundType.class, "block_metal_place", () -> (SoundType) SoundEvents.BLOCK_METAL_PLACE)
            .registerSupplier(SoundType.class, "block_metal_pressure_plate_click_off", () -> (SoundType) SoundEvents.BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF)
            .registerSupplier(SoundType.class, "block_metal_pressure_plate_click_on", () -> (SoundType) SoundEvents.BLOCK_METAL_PRESSURE_PLATE_CLICK_ON)
            .registerSupplier(SoundType.class, "block_metal_step", () -> (SoundType) SoundEvents.BLOCK_METAL_STEP)
            .registerSupplier(SoundType.class, "entity_minecart_inside", () -> (SoundType) SoundEvents.ENTITY_MINECART_INSIDE)
            .registerSupplier(SoundType.class, "entity_minecart_riding", () -> (SoundType) SoundEvents.ENTITY_MINECART_RIDING)
            .registerSupplier(SoundType.class, "entity_mooshroom_convert", () -> (SoundType) SoundEvents.ENTITY_MOOSHROOM_CONVERT)
            .registerSupplier(SoundType.class, "entity_mooshroom_eat", () -> (SoundType) SoundEvents.ENTITY_MOOSHROOM_EAT)
            .registerSupplier(SoundType.class, "entity_mooshroom_milk", () -> (SoundType) SoundEvents.ENTITY_MOOSHROOM_MILK)
            .registerSupplier(SoundType.class, "entity_mooshroom_suspicious_milk", () -> (SoundType) SoundEvents.ENTITY_MOOSHROOM_SUSPICIOUS_MILK)
            .registerSupplier(SoundType.class, "entity_mooshroom_shear", () -> (SoundType) SoundEvents.ENTITY_MOOSHROOM_SHEAR)
            .registerSupplier(SoundType.class, "entity_mule_ambient", () -> (SoundType) SoundEvents.ENTITY_MULE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_mule_chest", () -> (SoundType) SoundEvents.ENTITY_MULE_CHEST)
            .registerSupplier(SoundType.class, "entity_mule_death", () -> (SoundType) SoundEvents.ENTITY_MULE_DEATH)
            .registerSupplier(SoundType.class, "entity_mule_hurt", () -> (SoundType) SoundEvents.ENTITY_MULE_HURT)
            .registerSupplier(SoundType.class, "music_creative", () -> (SoundType) SoundEvents.MUSIC_CREATIVE)
            .registerSupplier(SoundType.class, "music_credits", () -> (SoundType) SoundEvents.MUSIC_CREDITS)
            .registerSupplier(SoundType.class, "music_dragon", () -> (SoundType) SoundEvents.MUSIC_DRAGON)
            .registerSupplier(SoundType.class, "music_end", () -> (SoundType) SoundEvents.MUSIC_END)
            .registerSupplier(SoundType.class, "music_game", () -> (SoundType) SoundEvents.MUSIC_GAME)
            .registerSupplier(SoundType.class, "music_menu", () -> (SoundType) SoundEvents.MUSIC_MENU)
            .registerSupplier(SoundType.class, "music_nether", () -> (SoundType) SoundEvents.MUSIC_NETHER)
            .registerSupplier(SoundType.class, "music_under_water", () -> (SoundType) SoundEvents.MUSIC_UNDER_WATER)
            .registerSupplier(SoundType.class, "block_nether_wart_break", () -> (SoundType) SoundEvents.BLOCK_NETHER_WART_BREAK)
            .registerSupplier(SoundType.class, "item_nether_wart_plant", () -> (SoundType) SoundEvents.ITEM_NETHER_WART_PLANT)
            .registerSupplier(SoundType.class, "block_note_block_basedrum", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_BASEDRUM)
            .registerSupplier(SoundType.class, "block_note_block_bass", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_BASS)
            .registerSupplier(SoundType.class, "block_note_block_bell", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_BELL)
            .registerSupplier(SoundType.class, "block_note_block_chime", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_CHIME)
            .registerSupplier(SoundType.class, "block_note_block_flute", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_FLUTE)
            .registerSupplier(SoundType.class, "block_note_block_guitar", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_GUITAR)
            .registerSupplier(SoundType.class, "block_note_block_harp", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_HARP)
            .registerSupplier(SoundType.class, "block_note_block_hat", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_HAT)
            .registerSupplier(SoundType.class, "block_note_block_pling", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_PLING)
            .registerSupplier(SoundType.class, "block_note_block_snare", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_SNARE)
            .registerSupplier(SoundType.class, "block_note_block_xylophone", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_XYLOPHONE)
            .registerSupplier(SoundType.class, "block_note_block_iron_xylophone", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_IRON_XYLOPHONE)
            .registerSupplier(SoundType.class, "block_note_block_cow_bell", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_COW_BELL)
            .registerSupplier(SoundType.class, "block_note_block_didgeridoo", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_DIDGERIDOO)
            .registerSupplier(SoundType.class, "block_note_block_bit", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_BIT)
            .registerSupplier(SoundType.class, "block_note_block_banjo", () -> (SoundType) SoundEvents.BLOCK_NOTE_BLOCK_BANJO)
            .registerSupplier(SoundType.class, "entity_ocelot_hurt", () -> (SoundType) SoundEvents.ENTITY_OCELOT_HURT)
            .registerSupplier(SoundType.class, "entity_ocelot_ambient", () -> (SoundType) SoundEvents.ENTITY_OCELOT_AMBIENT)
            .registerSupplier(SoundType.class, "entity_ocelot_death", () -> (SoundType) SoundEvents.ENTITY_OCELOT_DEATH)
            .registerSupplier(SoundType.class, "entity_painting_break", () -> (SoundType) SoundEvents.ENTITY_PAINTING_BREAK)
            .registerSupplier(SoundType.class, "entity_painting_place", () -> (SoundType) SoundEvents.ENTITY_PAINTING_PLACE)
            .registerSupplier(SoundType.class, "entity_panda_pre_sneeze", () -> (SoundType) SoundEvents.ENTITY_PANDA_PRE_SNEEZE)
            .registerSupplier(SoundType.class, "entity_panda_sneeze", () -> (SoundType) SoundEvents.ENTITY_PANDA_SNEEZE)
            .registerSupplier(SoundType.class, "entity_panda_ambient", () -> (SoundType) SoundEvents.ENTITY_PANDA_AMBIENT)
            .registerSupplier(SoundType.class, "entity_panda_death", () -> (SoundType) SoundEvents.ENTITY_PANDA_DEATH)
            .registerSupplier(SoundType.class, "entity_panda_eat", () -> (SoundType) SoundEvents.ENTITY_PANDA_EAT)
            .registerSupplier(SoundType.class, "entity_panda_step", () -> (SoundType) SoundEvents.ENTITY_PANDA_STEP)
            .registerSupplier(SoundType.class, "entity_panda_cant_breed", () -> (SoundType) SoundEvents.ENTITY_PANDA_CANT_BREED)
            .registerSupplier(SoundType.class, "entity_panda_aggressive_ambient", () -> (SoundType) SoundEvents.ENTITY_PANDA_AGGRESSIVE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_panda_worried_ambient", () -> (SoundType) SoundEvents.ENTITY_PANDA_WORRIED_AMBIENT)
            .registerSupplier(SoundType.class, "entity_panda_hurt", () -> (SoundType) SoundEvents.ENTITY_PANDA_HURT)
            .registerSupplier(SoundType.class, "entity_panda_bite", () -> (SoundType) SoundEvents.ENTITY_PANDA_BITE)
            .registerSupplier(SoundType.class, "entity_parrot_ambient", () -> (SoundType) SoundEvents.ENTITY_PARROT_AMBIENT)
            .registerSupplier(SoundType.class, "entity_parrot_death", () -> (SoundType) SoundEvents.ENTITY_PARROT_DEATH)
            .registerSupplier(SoundType.class, "entity_parrot_eat", () -> (SoundType) SoundEvents.ENTITY_PARROT_EAT)
            .registerSupplier(SoundType.class, "entity_parrot_fly", () -> (SoundType) SoundEvents.ENTITY_PARROT_FLY)
            .registerSupplier(SoundType.class, "entity_parrot_hurt", () -> (SoundType) SoundEvents.ENTITY_PARROT_HURT)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_blaze", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_BLAZE)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_creeper", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_CREEPER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_drowned", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_DROWNED)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_elder_guardian", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_ELDER_GUARDIAN)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_ender_dragon", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_ENDER_DRAGON)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_endermite", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_ENDERMITE)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_evoker", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_EVOKER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_ghast", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_GHAST)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_guardian", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_GUARDIAN)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_husk", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_HUSK)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_illusioner", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_ILLUSIONER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_magma_cube", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_MAGMA_CUBE)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_phantom", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_PHANTOM)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_pillager", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_PILLAGER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_ravager", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_RAVAGER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_shulker", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_SHULKER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_silverfish", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_SILVERFISH)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_skeleton", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_SKELETON)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_slime", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_SLIME)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_spider", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_SPIDER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_stray", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_STRAY)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_vex", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_VEX)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_vindicator", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_VINDICATOR)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_witch", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_WITCH)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_wither", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_WITHER)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_wither_skeleton", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_WITHER_SKELETON)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_zombie", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_ZOMBIE)
            .registerSupplier(SoundType.class, "entity_parrot_imitate_zombie_villager", () -> (SoundType) SoundEvents.ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER)
            .registerSupplier(SoundType.class, "entity_parrot_step", () -> (SoundType) SoundEvents.ENTITY_PARROT_STEP)
            .registerSupplier(SoundType.class, "entity_phantom_ambient", () -> (SoundType) SoundEvents.ENTITY_PHANTOM_AMBIENT)
            .registerSupplier(SoundType.class, "entity_phantom_bite", () -> (SoundType) SoundEvents.ENTITY_PHANTOM_BITE)
            .registerSupplier(SoundType.class, "entity_phantom_death", () -> (SoundType) SoundEvents.ENTITY_PHANTOM_DEATH)
            .registerSupplier(SoundType.class, "entity_phantom_flap", () -> (SoundType) SoundEvents.ENTITY_PHANTOM_FLAP)
            .registerSupplier(SoundType.class, "entity_phantom_hurt", () -> (SoundType) SoundEvents.ENTITY_PHANTOM_HURT)
            .registerSupplier(SoundType.class, "entity_phantom_swoop", () -> (SoundType) SoundEvents.ENTITY_PHANTOM_SWOOP)
            .registerSupplier(SoundType.class, "entity_pig_ambient", () -> (SoundType) SoundEvents.ENTITY_PIG_AMBIENT)
            .registerSupplier(SoundType.class, "entity_pig_death", () -> (SoundType) SoundEvents.ENTITY_PIG_DEATH)
            .registerSupplier(SoundType.class, "entity_pig_hurt", () -> (SoundType) SoundEvents.ENTITY_PIG_HURT)
            .registerSupplier(SoundType.class, "entity_pig_saddle", () -> (SoundType) SoundEvents.ENTITY_PIG_SADDLE)
            .registerSupplier(SoundType.class, "entity_pig_step", () -> (SoundType) SoundEvents.ENTITY_PIG_STEP)
            .registerSupplier(SoundType.class, "entity_pillager_ambient", () -> (SoundType) SoundEvents.ENTITY_PILLAGER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_pillager_celebrate", () -> (SoundType) SoundEvents.ENTITY_PILLAGER_CELEBRATE)
            .registerSupplier(SoundType.class, "entity_pillager_death", () -> (SoundType) SoundEvents.ENTITY_PILLAGER_DEATH)
            .registerSupplier(SoundType.class, "entity_pillager_hurt", () -> (SoundType) SoundEvents.ENTITY_PILLAGER_HURT)
            .registerSupplier(SoundType.class, "block_piston_contract", () -> (SoundType) SoundEvents.BLOCK_PISTON_CONTRACT)
            .registerSupplier(SoundType.class, "block_piston_extend", () -> (SoundType) SoundEvents.BLOCK_PISTON_EXTEND)
            .registerSupplier(SoundType.class, "entity_player_attack_crit", () -> (SoundType) SoundEvents.ENTITY_PLAYER_ATTACK_CRIT)
            .registerSupplier(SoundType.class, "entity_player_attack_knockback", () -> (SoundType) SoundEvents.ENTITY_PLAYER_ATTACK_KNOCKBACK)
            .registerSupplier(SoundType.class, "entity_player_attack_nodamage", () -> (SoundType) SoundEvents.ENTITY_PLAYER_ATTACK_NODAMAGE)
            .registerSupplier(SoundType.class, "entity_player_attack_strong", () -> (SoundType) SoundEvents.ENTITY_PLAYER_ATTACK_STRONG)
            .registerSupplier(SoundType.class, "entity_player_attack_sweep", () -> (SoundType) SoundEvents.ENTITY_PLAYER_ATTACK_SWEEP)
            .registerSupplier(SoundType.class, "entity_player_attack_weak", () -> (SoundType) SoundEvents.ENTITY_PLAYER_ATTACK_WEAK)
            .registerSupplier(SoundType.class, "entity_player_big_fall", () -> (SoundType) SoundEvents.ENTITY_PLAYER_BIG_FALL)
            .registerSupplier(SoundType.class, "entity_player_breath", () -> (SoundType) SoundEvents.ENTITY_PLAYER_BREATH)
            .registerSupplier(SoundType.class, "entity_player_burp", () -> (SoundType) SoundEvents.ENTITY_PLAYER_BURP)
            .registerSupplier(SoundType.class, "entity_player_death", () -> (SoundType) SoundEvents.ENTITY_PLAYER_DEATH)
            .registerSupplier(SoundType.class, "entity_player_hurt", () -> (SoundType) SoundEvents.ENTITY_PLAYER_HURT)
            .registerSupplier(SoundType.class, "entity_player_hurt_drown", () -> (SoundType) SoundEvents.ENTITY_PLAYER_HURT_DROWN)
            .registerSupplier(SoundType.class, "entity_player_hurt_on_fire", () -> (SoundType) SoundEvents.ENTITY_PLAYER_HURT_ON_FIRE)
            .registerSupplier(SoundType.class, "entity_player_hurt_sweet_berry_bush", () -> (SoundType) SoundEvents.ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH)
            .registerSupplier(SoundType.class, "entity_player_levelup", () -> (SoundType) SoundEvents.ENTITY_PLAYER_LEVELUP)
            .registerSupplier(SoundType.class, "entity_player_small_fall", () -> (SoundType) SoundEvents.ENTITY_PLAYER_SMALL_FALL)
            .registerSupplier(SoundType.class, "entity_player_splash", () -> (SoundType) SoundEvents.ENTITY_PLAYER_SPLASH)
            .registerSupplier(SoundType.class, "entity_player_splash_high_speed", () -> (SoundType) SoundEvents.ENTITY_PLAYER_SPLASH_HIGH_SPEED)
            .registerSupplier(SoundType.class, "entity_player_swim", () -> (SoundType) SoundEvents.ENTITY_PLAYER_SWIM)
            .registerSupplier(SoundType.class, "entity_polar_bear_ambient", () -> (SoundType) SoundEvents.ENTITY_POLAR_BEAR_AMBIENT)
            .registerSupplier(SoundType.class, "entity_polar_bear_ambient_baby", () -> (SoundType) SoundEvents.ENTITY_POLAR_BEAR_AMBIENT_BABY)
            .registerSupplier(SoundType.class, "entity_polar_bear_death", () -> (SoundType) SoundEvents.ENTITY_POLAR_BEAR_DEATH)
            .registerSupplier(SoundType.class, "entity_polar_bear_hurt", () -> (SoundType) SoundEvents.ENTITY_POLAR_BEAR_HURT)
            .registerSupplier(SoundType.class, "entity_polar_bear_step", () -> (SoundType) SoundEvents.ENTITY_POLAR_BEAR_STEP)
            .registerSupplier(SoundType.class, "entity_polar_bear_warning", () -> (SoundType) SoundEvents.ENTITY_POLAR_BEAR_WARNING)
            .registerSupplier(SoundType.class, "block_portal_ambient", () -> (SoundType) SoundEvents.BLOCK_PORTAL_AMBIENT)
            .registerSupplier(SoundType.class, "block_portal_travel", () -> (SoundType) SoundEvents.BLOCK_PORTAL_TRAVEL)
            .registerSupplier(SoundType.class, "block_portal_trigger", () -> (SoundType) SoundEvents.BLOCK_PORTAL_TRIGGER)
            .registerSupplier(SoundType.class, "entity_puffer_fish_ambient", () -> (SoundType) SoundEvents.ENTITY_PUFFER_FISH_AMBIENT)
            .registerSupplier(SoundType.class, "entity_puffer_fish_blow_out", () -> (SoundType) SoundEvents.ENTITY_PUFFER_FISH_BLOW_OUT)
            .registerSupplier(SoundType.class, "entity_puffer_fish_blow_up", () -> (SoundType) SoundEvents.ENTITY_PUFFER_FISH_BLOW_UP)
            .registerSupplier(SoundType.class, "entity_puffer_fish_death", () -> (SoundType) SoundEvents.ENTITY_PUFFER_FISH_DEATH)
            .registerSupplier(SoundType.class, "entity_puffer_fish_flop", () -> (SoundType) SoundEvents.ENTITY_PUFFER_FISH_FLOP)
            .registerSupplier(SoundType.class, "entity_puffer_fish_hurt", () -> (SoundType) SoundEvents.ENTITY_PUFFER_FISH_HURT)
            .registerSupplier(SoundType.class, "entity_puffer_fish_sting", () -> (SoundType) SoundEvents.ENTITY_PUFFER_FISH_STING)
            .registerSupplier(SoundType.class, "block_pumpkin_carve", () -> (SoundType) SoundEvents.BLOCK_PUMPKIN_CARVE)
            .registerSupplier(SoundType.class, "entity_rabbit_ambient", () -> (SoundType) SoundEvents.ENTITY_RABBIT_AMBIENT)
            .registerSupplier(SoundType.class, "entity_rabbit_attack", () -> (SoundType) SoundEvents.ENTITY_RABBIT_ATTACK)
            .registerSupplier(SoundType.class, "entity_rabbit_death", () -> (SoundType) SoundEvents.ENTITY_RABBIT_DEATH)
            .registerSupplier(SoundType.class, "entity_rabbit_hurt", () -> (SoundType) SoundEvents.ENTITY_RABBIT_HURT)
            .registerSupplier(SoundType.class, "entity_rabbit_jump", () -> (SoundType) SoundEvents.ENTITY_RABBIT_JUMP)
            .registerSupplier(SoundType.class, "event_raid_horn", () -> (SoundType) SoundEvents.EVENT_RAID_HORN)
            .registerSupplier(SoundType.class, "music_disc_11", () -> (SoundType) SoundEvents.MUSIC_DISC_11)
            .registerSupplier(SoundType.class, "music_disc_13", () -> (SoundType) SoundEvents.MUSIC_DISC_13)
            .registerSupplier(SoundType.class, "music_disc_blocks", () -> (SoundType) SoundEvents.MUSIC_DISC_BLOCKS)
            .registerSupplier(SoundType.class, "music_disc_cat", () -> (SoundType) SoundEvents.MUSIC_DISC_CAT)
            .registerSupplier(SoundType.class, "music_disc_chirp", () -> (SoundType) SoundEvents.MUSIC_DISC_CHIRP)
            .registerSupplier(SoundType.class, "music_disc_far", () -> (SoundType) SoundEvents.MUSIC_DISC_FAR)
            .registerSupplier(SoundType.class, "music_disc_mall", () -> (SoundType) SoundEvents.MUSIC_DISC_MALL)
            .registerSupplier(SoundType.class, "music_disc_mellohi", () -> (SoundType) SoundEvents.MUSIC_DISC_MELLOHI)
            .registerSupplier(SoundType.class, "music_disc_stal", () -> (SoundType) SoundEvents.MUSIC_DISC_STAL)
            .registerSupplier(SoundType.class, "music_disc_strad", () -> (SoundType) SoundEvents.MUSIC_DISC_STRAD)
            .registerSupplier(SoundType.class, "music_disc_wait", () -> (SoundType) SoundEvents.MUSIC_DISC_WAIT)
            .registerSupplier(SoundType.class, "music_disc_ward", () -> (SoundType) SoundEvents.MUSIC_DISC_WARD)
            .registerSupplier(SoundType.class, "block_redstone_torch_burnout", () -> (SoundType) SoundEvents.BLOCK_REDSTONE_TORCH_BURNOUT)
            .registerSupplier(SoundType.class, "entity_salmon_ambient", () -> (SoundType) SoundEvents.ENTITY_SALMON_AMBIENT)
            .registerSupplier(SoundType.class, "entity_salmon_death", () -> (SoundType) SoundEvents.ENTITY_SALMON_DEATH)
            .registerSupplier(SoundType.class, "entity_salmon_flop", () -> (SoundType) SoundEvents.ENTITY_SALMON_FLOP)
            .registerSupplier(SoundType.class, "entity_salmon_hurt", () -> (SoundType) SoundEvents.ENTITY_SALMON_HURT)
            .registerSupplier(SoundType.class, "block_sand_break", () -> (SoundType) SoundEvents.BLOCK_SAND_BREAK)
            .registerSupplier(SoundType.class, "block_sand_fall", () -> (SoundType) SoundEvents.BLOCK_SAND_FALL)
            .registerSupplier(SoundType.class, "block_sand_hit", () -> (SoundType) SoundEvents.BLOCK_SAND_HIT)
            .registerSupplier(SoundType.class, "block_sand_place", () -> (SoundType) SoundEvents.BLOCK_SAND_PLACE)
            .registerSupplier(SoundType.class, "block_sand_step", () -> (SoundType) SoundEvents.BLOCK_SAND_STEP)
            .registerSupplier(SoundType.class, "block_scaffolding_break", () -> (SoundType) SoundEvents.BLOCK_SCAFFOLDING_BREAK)
            .registerSupplier(SoundType.class, "block_scaffolding_fall", () -> (SoundType) SoundEvents.BLOCK_SCAFFOLDING_FALL)
            .registerSupplier(SoundType.class, "block_scaffolding_hit", () -> (SoundType) SoundEvents.BLOCK_SCAFFOLDING_HIT)
            .registerSupplier(SoundType.class, "block_scaffolding_place", () -> (SoundType) SoundEvents.BLOCK_SCAFFOLDING_PLACE)
            .registerSupplier(SoundType.class, "block_scaffolding_step", () -> (SoundType) SoundEvents.BLOCK_SCAFFOLDING_STEP)
            .registerSupplier(SoundType.class, "entity_sheep_ambient", () -> (SoundType) SoundEvents.ENTITY_SHEEP_AMBIENT)
            .registerSupplier(SoundType.class, "entity_sheep_death", () -> (SoundType) SoundEvents.ENTITY_SHEEP_DEATH)
            .registerSupplier(SoundType.class, "entity_sheep_hurt", () -> (SoundType) SoundEvents.ENTITY_SHEEP_HURT)
            .registerSupplier(SoundType.class, "entity_sheep_shear", () -> (SoundType) SoundEvents.ENTITY_SHEEP_SHEAR)
            .registerSupplier(SoundType.class, "entity_sheep_step", () -> (SoundType) SoundEvents.ENTITY_SHEEP_STEP)
            .registerSupplier(SoundType.class, "item_shield_block", () -> (SoundType) SoundEvents.ITEM_SHIELD_BLOCK)
            .registerSupplier(SoundType.class, "item_shield_break", () -> (SoundType) SoundEvents.ITEM_SHIELD_BREAK)
            .registerSupplier(SoundType.class, "item_shovel_flatten", () -> (SoundType) SoundEvents.ITEM_SHOVEL_FLATTEN)
            .registerSupplier(SoundType.class, "entity_shulker_ambient", () -> (SoundType) SoundEvents.ENTITY_SHULKER_AMBIENT)
            .registerSupplier(SoundType.class, "block_shulker_box_close", () -> (SoundType) SoundEvents.BLOCK_SHULKER_BOX_CLOSE)
            .registerSupplier(SoundType.class, "block_shulker_box_open", () -> (SoundType) SoundEvents.BLOCK_SHULKER_BOX_OPEN)
            .registerSupplier(SoundType.class, "entity_shulker_bullet_hit", () -> (SoundType) SoundEvents.ENTITY_SHULKER_BULLET_HIT)
            .registerSupplier(SoundType.class, "entity_shulker_bullet_hurt", () -> (SoundType) SoundEvents.ENTITY_SHULKER_BULLET_HURT)
            .registerSupplier(SoundType.class, "entity_shulker_close", () -> (SoundType) SoundEvents.ENTITY_SHULKER_CLOSE)
            .registerSupplier(SoundType.class, "entity_shulker_death", () -> (SoundType) SoundEvents.ENTITY_SHULKER_DEATH)
            .registerSupplier(SoundType.class, "entity_shulker_hurt", () -> (SoundType) SoundEvents.ENTITY_SHULKER_HURT)
            .registerSupplier(SoundType.class, "entity_shulker_hurt_closed", () -> (SoundType) SoundEvents.ENTITY_SHULKER_HURT_CLOSED)
            .registerSupplier(SoundType.class, "entity_shulker_open", () -> (SoundType) SoundEvents.ENTITY_SHULKER_OPEN)
            .registerSupplier(SoundType.class, "entity_shulker_shoot", () -> (SoundType) SoundEvents.ENTITY_SHULKER_SHOOT)
            .registerSupplier(SoundType.class, "entity_shulker_teleport", () -> (SoundType) SoundEvents.ENTITY_SHULKER_TELEPORT)
            .registerSupplier(SoundType.class, "entity_silverfish_ambient", () -> (SoundType) SoundEvents.ENTITY_SILVERFISH_AMBIENT)
            .registerSupplier(SoundType.class, "entity_silverfish_death", () -> (SoundType) SoundEvents.ENTITY_SILVERFISH_DEATH)
            .registerSupplier(SoundType.class, "entity_silverfish_hurt", () -> (SoundType) SoundEvents.ENTITY_SILVERFISH_HURT)
            .registerSupplier(SoundType.class, "entity_silverfish_step", () -> (SoundType) SoundEvents.ENTITY_SILVERFISH_STEP)
            .registerSupplier(SoundType.class, "entity_skeleton_ambient", () -> (SoundType) SoundEvents.ENTITY_SKELETON_AMBIENT)
            .registerSupplier(SoundType.class, "entity_skeleton_death", () -> (SoundType) SoundEvents.ENTITY_SKELETON_DEATH)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_ambient", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_death", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_DEATH)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_hurt", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_HURT)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_swim", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_SWIM)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_ambient_water", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_AMBIENT_WATER)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_gallop_water", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_GALLOP_WATER)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_jump_water", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_JUMP_WATER)
            .registerSupplier(SoundType.class, "entity_skeleton_horse_step_water", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HORSE_STEP_WATER)
            .registerSupplier(SoundType.class, "entity_skeleton_hurt", () -> (SoundType) SoundEvents.ENTITY_SKELETON_HURT)
            .registerSupplier(SoundType.class, "entity_skeleton_shoot", () -> (SoundType) SoundEvents.ENTITY_SKELETON_SHOOT)
            .registerSupplier(SoundType.class, "entity_skeleton_step", () -> (SoundType) SoundEvents.ENTITY_SKELETON_STEP)
            .registerSupplier(SoundType.class, "entity_slime_attack", () -> (SoundType) SoundEvents.ENTITY_SLIME_ATTACK)
            .registerSupplier(SoundType.class, "entity_slime_death", () -> (SoundType) SoundEvents.ENTITY_SLIME_DEATH)
            .registerSupplier(SoundType.class, "entity_slime_hurt", () -> (SoundType) SoundEvents.ENTITY_SLIME_HURT)
            .registerSupplier(SoundType.class, "entity_slime_jump", () -> (SoundType) SoundEvents.ENTITY_SLIME_JUMP)
            .registerSupplier(SoundType.class, "entity_slime_squish", () -> (SoundType) SoundEvents.ENTITY_SLIME_SQUISH)
            .registerSupplier(SoundType.class, "block_slime_block_break", () -> (SoundType) SoundEvents.BLOCK_SLIME_BLOCK_BREAK)
            .registerSupplier(SoundType.class, "block_slime_block_fall", () -> (SoundType) SoundEvents.BLOCK_SLIME_BLOCK_FALL)
            .registerSupplier(SoundType.class, "block_slime_block_hit", () -> (SoundType) SoundEvents.BLOCK_SLIME_BLOCK_HIT)
            .registerSupplier(SoundType.class, "block_slime_block_place", () -> (SoundType) SoundEvents.BLOCK_SLIME_BLOCK_PLACE)
            .registerSupplier(SoundType.class, "block_slime_block_step", () -> (SoundType) SoundEvents.BLOCK_SLIME_BLOCK_STEP)
            .registerSupplier(SoundType.class, "entity_magma_cube_death_small", () -> (SoundType) SoundEvents.ENTITY_MAGMA_CUBE_DEATH_SMALL)
            .registerSupplier(SoundType.class, "entity_magma_cube_hurt_small", () -> (SoundType) SoundEvents.ENTITY_MAGMA_CUBE_HURT_SMALL)
            .registerSupplier(SoundType.class, "entity_magma_cube_squish_small", () -> (SoundType) SoundEvents.ENTITY_MAGMA_CUBE_SQUISH_SMALL)
            .registerSupplier(SoundType.class, "entity_slime_death_small", () -> (SoundType) SoundEvents.ENTITY_SLIME_DEATH_SMALL)
            .registerSupplier(SoundType.class, "entity_slime_hurt_small", () -> (SoundType) SoundEvents.ENTITY_SLIME_HURT_SMALL)
            .registerSupplier(SoundType.class, "entity_slime_jump_small", () -> (SoundType) SoundEvents.ENTITY_SLIME_JUMP_SMALL)
            .registerSupplier(SoundType.class, "entity_slime_squish_small", () -> (SoundType) SoundEvents.ENTITY_SLIME_SQUISH_SMALL)
            .registerSupplier(SoundType.class, "block_smoker_smoke", () -> (SoundType) SoundEvents.BLOCK_SMOKER_SMOKE)
            .registerSupplier(SoundType.class, "entity_snowball_throw", () -> (SoundType) SoundEvents.ENTITY_SNOWBALL_THROW)
            .registerSupplier(SoundType.class, "block_snow_break", () -> (SoundType) SoundEvents.BLOCK_SNOW_BREAK)
            .registerSupplier(SoundType.class, "block_snow_fall", () -> (SoundType) SoundEvents.BLOCK_SNOW_FALL)
            .registerSupplier(SoundType.class, "entity_snow_golem_ambient", () -> (SoundType) SoundEvents.ENTITY_SNOW_GOLEM_AMBIENT)
            .registerSupplier(SoundType.class, "entity_snow_golem_death", () -> (SoundType) SoundEvents.ENTITY_SNOW_GOLEM_DEATH)
            .registerSupplier(SoundType.class, "entity_snow_golem_hurt", () -> (SoundType) SoundEvents.ENTITY_SNOW_GOLEM_HURT)
            .registerSupplier(SoundType.class, "entity_snow_golem_shoot", () -> (SoundType) SoundEvents.ENTITY_SNOW_GOLEM_SHOOT)
            .registerSupplier(SoundType.class, "block_snow_hit", () -> (SoundType) SoundEvents.BLOCK_SNOW_HIT)
            .registerSupplier(SoundType.class, "block_snow_place", () -> (SoundType) SoundEvents.BLOCK_SNOW_PLACE)
            .registerSupplier(SoundType.class, "block_snow_step", () -> (SoundType) SoundEvents.BLOCK_SNOW_STEP)
            .registerSupplier(SoundType.class, "entity_spider_ambient", () -> (SoundType) SoundEvents.ENTITY_SPIDER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_spider_death", () -> (SoundType) SoundEvents.ENTITY_SPIDER_DEATH)
            .registerSupplier(SoundType.class, "entity_spider_hurt", () -> (SoundType) SoundEvents.ENTITY_SPIDER_HURT)
            .registerSupplier(SoundType.class, "entity_spider_step", () -> (SoundType) SoundEvents.ENTITY_SPIDER_STEP)
            .registerSupplier(SoundType.class, "entity_splash_potion_break", () -> (SoundType) SoundEvents.ENTITY_SPLASH_POTION_BREAK)
            .registerSupplier(SoundType.class, "entity_splash_potion_throw", () -> (SoundType) SoundEvents.ENTITY_SPLASH_POTION_THROW)
            .registerSupplier(SoundType.class, "entity_squid_ambient", () -> (SoundType) SoundEvents.ENTITY_SQUID_AMBIENT)
            .registerSupplier(SoundType.class, "entity_squid_death", () -> (SoundType) SoundEvents.ENTITY_SQUID_DEATH)
            .registerSupplier(SoundType.class, "entity_squid_hurt", () -> (SoundType) SoundEvents.ENTITY_SQUID_HURT)
            .registerSupplier(SoundType.class, "entity_squid_squirt", () -> (SoundType) SoundEvents.ENTITY_SQUID_SQUIRT)
            .registerSupplier(SoundType.class, "block_stone_break", () -> (SoundType) SoundEvents.BLOCK_STONE_BREAK)
            .registerSupplier(SoundType.class, "block_stone_button_click_off", () -> (SoundType) SoundEvents.BLOCK_STONE_BUTTON_CLICK_OFF)
            .registerSupplier(SoundType.class, "block_stone_button_click_on", () -> (SoundType) SoundEvents.BLOCK_STONE_BUTTON_CLICK_ON)
            .registerSupplier(SoundType.class, "block_stone_fall", () -> (SoundType) SoundEvents.BLOCK_STONE_FALL)
            .registerSupplier(SoundType.class, "block_stone_hit", () -> (SoundType) SoundEvents.BLOCK_STONE_HIT)
            .registerSupplier(SoundType.class, "block_stone_place", () -> (SoundType) SoundEvents.BLOCK_STONE_PLACE)
            .registerSupplier(SoundType.class, "block_stone_pressure_plate_click_off", () -> (SoundType) SoundEvents.BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF)
            .registerSupplier(SoundType.class, "block_stone_pressure_plate_click_on", () -> (SoundType) SoundEvents.BLOCK_STONE_PRESSURE_PLATE_CLICK_ON)
            .registerSupplier(SoundType.class, "block_stone_step", () -> (SoundType) SoundEvents.BLOCK_STONE_STEP)
            .registerSupplier(SoundType.class, "entity_stray_ambient", () -> (SoundType) SoundEvents.ENTITY_STRAY_AMBIENT)
            .registerSupplier(SoundType.class, "entity_stray_death", () -> (SoundType) SoundEvents.ENTITY_STRAY_DEATH)
            .registerSupplier(SoundType.class, "entity_stray_hurt", () -> (SoundType) SoundEvents.ENTITY_STRAY_HURT)
            .registerSupplier(SoundType.class, "entity_stray_step", () -> (SoundType) SoundEvents.ENTITY_STRAY_STEP)
            .registerSupplier(SoundType.class, "block_sweet_berry_bush_break", () -> (SoundType) SoundEvents.BLOCK_SWEET_BERRY_BUSH_BREAK)
            .registerSupplier(SoundType.class, "block_sweet_berry_bush_place", () -> (SoundType) SoundEvents.BLOCK_SWEET_BERRY_BUSH_PLACE)
            .registerSupplier(SoundType.class, "item_sweet_berries_pick_from_bush", () -> (SoundType) SoundEvents.ITEM_SWEET_BERRIES_PICK_FROM_BUSH)
            .registerSupplier(SoundType.class, "enchant_thorns_hit", () -> (SoundType) SoundEvents.ENCHANT_THORNS_HIT)
            .registerSupplier(SoundType.class, "entity_tnt_primed", () -> (SoundType) SoundEvents.ENTITY_TNT_PRIMED)
            .registerSupplier(SoundType.class, "item_totem_use", () -> (SoundType) SoundEvents.ITEM_TOTEM_USE)
            .registerSupplier(SoundType.class, "item_trident_hit", () -> (SoundType) SoundEvents.ITEM_TRIDENT_HIT)
            .registerSupplier(SoundType.class, "item_trident_hit_ground", () -> (SoundType) SoundEvents.ITEM_TRIDENT_HIT_GROUND)
            .registerSupplier(SoundType.class, "item_trident_return", () -> (SoundType) SoundEvents.ITEM_TRIDENT_RETURN)
            .registerSupplier(SoundType.class, "item_trident_riptide_1", () -> (SoundType) SoundEvents.ITEM_TRIDENT_RIPTIDE_1)
            .registerSupplier(SoundType.class, "item_trident_riptide_2", () -> (SoundType) SoundEvents.ITEM_TRIDENT_RIPTIDE_2)
            .registerSupplier(SoundType.class, "item_trident_riptide_3", () -> (SoundType) SoundEvents.ITEM_TRIDENT_RIPTIDE_3)
            .registerSupplier(SoundType.class, "item_trident_throw", () -> (SoundType) SoundEvents.ITEM_TRIDENT_THROW)
            .registerSupplier(SoundType.class, "item_trident_thunder", () -> (SoundType) SoundEvents.ITEM_TRIDENT_THUNDER)
            .registerSupplier(SoundType.class, "block_tripwire_attach", () -> (SoundType) SoundEvents.BLOCK_TRIPWIRE_ATTACH)
            .registerSupplier(SoundType.class, "block_tripwire_click_off", () -> (SoundType) SoundEvents.BLOCK_TRIPWIRE_CLICK_OFF)
            .registerSupplier(SoundType.class, "block_tripwire_click_on", () -> (SoundType) SoundEvents.BLOCK_TRIPWIRE_CLICK_ON)
            .registerSupplier(SoundType.class, "block_tripwire_detach", () -> (SoundType) SoundEvents.BLOCK_TRIPWIRE_DETACH)
            .registerSupplier(SoundType.class, "entity_tropical_fish_ambient", () -> (SoundType) SoundEvents.ENTITY_TROPICAL_FISH_AMBIENT)
            .registerSupplier(SoundType.class, "entity_tropical_fish_death", () -> (SoundType) SoundEvents.ENTITY_TROPICAL_FISH_DEATH)
            .registerSupplier(SoundType.class, "entity_tropical_fish_flop", () -> (SoundType) SoundEvents.ENTITY_TROPICAL_FISH_FLOP)
            .registerSupplier(SoundType.class, "entity_tropical_fish_hurt", () -> (SoundType) SoundEvents.ENTITY_TROPICAL_FISH_HURT)
            .registerSupplier(SoundType.class, "entity_turtle_ambient_land", () -> (SoundType) SoundEvents.ENTITY_TURTLE_AMBIENT_LAND)
            .registerSupplier(SoundType.class, "entity_turtle_death", () -> (SoundType) SoundEvents.ENTITY_TURTLE_DEATH)
            .registerSupplier(SoundType.class, "entity_turtle_death_baby", () -> (SoundType) SoundEvents.ENTITY_TURTLE_DEATH_BABY)
            .registerSupplier(SoundType.class, "entity_turtle_egg_break", () -> (SoundType) SoundEvents.ENTITY_TURTLE_EGG_BREAK)
            .registerSupplier(SoundType.class, "entity_turtle_egg_crack", () -> (SoundType) SoundEvents.ENTITY_TURTLE_EGG_CRACK)
            .registerSupplier(SoundType.class, "entity_turtle_egg_hatch", () -> (SoundType) SoundEvents.ENTITY_TURTLE_EGG_HATCH)
            .registerSupplier(SoundType.class, "entity_turtle_hurt", () -> (SoundType) SoundEvents.ENTITY_TURTLE_HURT)
            .registerSupplier(SoundType.class, "entity_turtle_hurt_baby", () -> (SoundType) SoundEvents.ENTITY_TURTLE_HURT_BABY)
            .registerSupplier(SoundType.class, "entity_turtle_lay_egg", () -> (SoundType) SoundEvents.ENTITY_TURTLE_LAY_EGG)
            .registerSupplier(SoundType.class, "entity_turtle_shamble", () -> (SoundType) SoundEvents.ENTITY_TURTLE_SHAMBLE)
            .registerSupplier(SoundType.class, "entity_turtle_shamble_baby", () -> (SoundType) SoundEvents.ENTITY_TURTLE_SHAMBLE_BABY)
            .registerSupplier(SoundType.class, "entity_turtle_swim", () -> (SoundType) SoundEvents.ENTITY_TURTLE_SWIM)
            .registerSupplier(SoundType.class, "ui_button_click", () -> (SoundType) SoundEvents.UI_BUTTON_CLICK)
            .registerSupplier(SoundType.class, "ui_loom_select_pattern", () -> (SoundType) SoundEvents.UI_LOOM_SELECT_PATTERN)
            .registerSupplier(SoundType.class, "ui_loom_take_result", () -> (SoundType) SoundEvents.UI_LOOM_TAKE_RESULT)
            .registerSupplier(SoundType.class, "ui_cartography_table_take_result", () -> (SoundType) SoundEvents.UI_CARTOGRAPHY_TABLE_TAKE_RESULT)
            .registerSupplier(SoundType.class, "ui_stonecutter_take_result", () -> (SoundType) SoundEvents.UI_STONECUTTER_TAKE_RESULT)
            .registerSupplier(SoundType.class, "ui_stonecutter_select_recipe", () -> (SoundType) SoundEvents.UI_STONECUTTER_SELECT_RECIPE)
            .registerSupplier(SoundType.class, "ui_toast_challenge_complete", () -> (SoundType) SoundEvents.UI_TOAST_CHALLENGE_COMPLETE)
            .registerSupplier(SoundType.class, "ui_toast_in", () -> (SoundType) SoundEvents.UI_TOAST_IN)
            .registerSupplier(SoundType.class, "ui_toast_out", () -> (SoundType) SoundEvents.UI_TOAST_OUT)
            .registerSupplier(SoundType.class, "entity_vex_ambient", () -> (SoundType) SoundEvents.ENTITY_VEX_AMBIENT)
            .registerSupplier(SoundType.class, "entity_vex_charge", () -> (SoundType) SoundEvents.ENTITY_VEX_CHARGE)
            .registerSupplier(SoundType.class, "entity_vex_death", () -> (SoundType) SoundEvents.ENTITY_VEX_DEATH)
            .registerSupplier(SoundType.class, "entity_vex_hurt", () -> (SoundType) SoundEvents.ENTITY_VEX_HURT)
            .registerSupplier(SoundType.class, "entity_villager_ambient", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_villager_celebrate", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_CELEBRATE)
            .registerSupplier(SoundType.class, "entity_villager_death", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_DEATH)
            .registerSupplier(SoundType.class, "entity_villager_hurt", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_HURT)
            .registerSupplier(SoundType.class, "entity_villager_no", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_NO)
            .registerSupplier(SoundType.class, "entity_villager_trade", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_TRADE)
            .registerSupplier(SoundType.class, "entity_villager_yes", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_YES)
            .registerSupplier(SoundType.class, "entity_villager_work_armorer", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_ARMORER)
            .registerSupplier(SoundType.class, "entity_villager_work_butcher", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_BUTCHER)
            .registerSupplier(SoundType.class, "entity_villager_work_cartographer", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_CARTOGRAPHER)
            .registerSupplier(SoundType.class, "entity_villager_work_cleric", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_CLERIC)
            .registerSupplier(SoundType.class, "entity_villager_work_farmer", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_FARMER)
            .registerSupplier(SoundType.class, "entity_villager_work_fisherman", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_FISHERMAN)
            .registerSupplier(SoundType.class, "entity_villager_work_fletcher", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_FLETCHER)
            .registerSupplier(SoundType.class, "entity_villager_work_leatherworker", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_LEATHERWORKER)
            .registerSupplier(SoundType.class, "entity_villager_work_librarian", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_LIBRARIAN)
            .registerSupplier(SoundType.class, "entity_villager_work_mason", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_MASON)
            .registerSupplier(SoundType.class, "entity_villager_work_shepherd", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_SHEPHERD)
            .registerSupplier(SoundType.class, "entity_villager_work_toolsmith", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_TOOLSMITH)
            .registerSupplier(SoundType.class, "entity_villager_work_weaponsmith", () -> (SoundType) SoundEvents.ENTITY_VILLAGER_WORK_WEAPONSMITH)
            .registerSupplier(SoundType.class, "entity_vindicator_ambient", () -> (SoundType) SoundEvents.ENTITY_VINDICATOR_AMBIENT)
            .registerSupplier(SoundType.class, "entity_vindicator_celebrate", () -> (SoundType) SoundEvents.ENTITY_VINDICATOR_CELEBRATE)
            .registerSupplier(SoundType.class, "entity_vindicator_death", () -> (SoundType) SoundEvents.ENTITY_VINDICATOR_DEATH)
            .registerSupplier(SoundType.class, "entity_vindicator_hurt", () -> (SoundType) SoundEvents.ENTITY_VINDICATOR_HURT)
            .registerSupplier(SoundType.class, "block_lily_pad_place", () -> (SoundType) SoundEvents.BLOCK_LILY_PAD_PLACE)
            .registerSupplier(SoundType.class, "entity_wandering_trader_ambient", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_wandering_trader_death", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_DEATH)
            .registerSupplier(SoundType.class, "entity_wandering_trader_disappeared", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_DISAPPEARED)
            .registerSupplier(SoundType.class, "entity_wandering_trader_drink_milk", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_DRINK_MILK)
            .registerSupplier(SoundType.class, "entity_wandering_trader_drink_potion", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_DRINK_POTION)
            .registerSupplier(SoundType.class, "entity_wandering_trader_hurt", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_HURT)
            .registerSupplier(SoundType.class, "entity_wandering_trader_no", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_NO)
            .registerSupplier(SoundType.class, "entity_wandering_trader_reappeared", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_REAPPEARED)
            .registerSupplier(SoundType.class, "entity_wandering_trader_trade", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_TRADE)
            .registerSupplier(SoundType.class, "entity_wandering_trader_yes", () -> (SoundType) SoundEvents.ENTITY_WANDERING_TRADER_YES)
            .registerSupplier(SoundType.class, "block_water_ambient", () -> (SoundType) SoundEvents.BLOCK_WATER_AMBIENT)
            .registerSupplier(SoundType.class, "weather_rain", () -> (SoundType) SoundEvents.WEATHER_RAIN)
            .registerSupplier(SoundType.class, "weather_rain_above", () -> (SoundType) SoundEvents.WEATHER_RAIN_ABOVE)
            .registerSupplier(SoundType.class, "entity_witch_ambient", () -> (SoundType) SoundEvents.ENTITY_WITCH_AMBIENT)
            .registerSupplier(SoundType.class, "entity_witch_celebrate", () -> (SoundType) SoundEvents.ENTITY_WITCH_CELEBRATE)
            .registerSupplier(SoundType.class, "entity_witch_death", () -> (SoundType) SoundEvents.ENTITY_WITCH_DEATH)
            .registerSupplier(SoundType.class, "entity_witch_drink", () -> (SoundType) SoundEvents.ENTITY_WITCH_DRINK)
            .registerSupplier(SoundType.class, "entity_witch_hurt", () -> (SoundType) SoundEvents.ENTITY_WITCH_HURT)
            .registerSupplier(SoundType.class, "entity_witch_throw", () -> (SoundType) SoundEvents.ENTITY_WITCH_THROW)
            .registerSupplier(SoundType.class, "entity_wither_ambient", () -> (SoundType) SoundEvents.ENTITY_WITHER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_wither_break_block", () -> (SoundType) SoundEvents.ENTITY_WITHER_BREAK_BLOCK)
            .registerSupplier(SoundType.class, "entity_wither_death", () -> (SoundType) SoundEvents.ENTITY_WITHER_DEATH)
            .registerSupplier(SoundType.class, "entity_wither_hurt", () -> (SoundType) SoundEvents.ENTITY_WITHER_HURT)
            .registerSupplier(SoundType.class, "entity_wither_shoot", () -> (SoundType) SoundEvents.ENTITY_WITHER_SHOOT)
            .registerSupplier(SoundType.class, "entity_wither_skeleton_ambient", () -> (SoundType) SoundEvents.ENTITY_WITHER_SKELETON_AMBIENT)
            .registerSupplier(SoundType.class, "entity_wither_skeleton_death", () -> (SoundType) SoundEvents.ENTITY_WITHER_SKELETON_DEATH)
            .registerSupplier(SoundType.class, "entity_wither_skeleton_hurt", () -> (SoundType) SoundEvents.ENTITY_WITHER_SKELETON_HURT)
            .registerSupplier(SoundType.class, "entity_wither_skeleton_step", () -> (SoundType) SoundEvents.ENTITY_WITHER_SKELETON_STEP)
            .registerSupplier(SoundType.class, "entity_wither_spawn", () -> (SoundType) SoundEvents.ENTITY_WITHER_SPAWN)
            .registerSupplier(SoundType.class, "entity_wolf_ambient", () -> (SoundType) SoundEvents.ENTITY_WOLF_AMBIENT)
            .registerSupplier(SoundType.class, "entity_wolf_death", () -> (SoundType) SoundEvents.ENTITY_WOLF_DEATH)
            .registerSupplier(SoundType.class, "entity_wolf_growl", () -> (SoundType) SoundEvents.ENTITY_WOLF_GROWL)
            .registerSupplier(SoundType.class, "entity_wolf_howl", () -> (SoundType) SoundEvents.ENTITY_WOLF_HOWL)
            .registerSupplier(SoundType.class, "entity_wolf_hurt", () -> (SoundType) SoundEvents.ENTITY_WOLF_HURT)
            .registerSupplier(SoundType.class, "entity_wolf_pant", () -> (SoundType) SoundEvents.ENTITY_WOLF_PANT)
            .registerSupplier(SoundType.class, "entity_wolf_shake", () -> (SoundType) SoundEvents.ENTITY_WOLF_SHAKE)
            .registerSupplier(SoundType.class, "entity_wolf_step", () -> (SoundType) SoundEvents.ENTITY_WOLF_STEP)
            .registerSupplier(SoundType.class, "entity_wolf_whine", () -> (SoundType) SoundEvents.ENTITY_WOLF_WHINE)
            .registerSupplier(SoundType.class, "block_wooden_door_close", () -> (SoundType) SoundEvents.BLOCK_WOODEN_DOOR_CLOSE)
            .registerSupplier(SoundType.class, "block_wooden_door_open", () -> (SoundType) SoundEvents.BLOCK_WOODEN_DOOR_OPEN)
            .registerSupplier(SoundType.class, "block_wooden_trapdoor_close", () -> (SoundType) SoundEvents.BLOCK_WOODEN_TRAPDOOR_CLOSE)
            .registerSupplier(SoundType.class, "block_wooden_trapdoor_open", () -> (SoundType) SoundEvents.BLOCK_WOODEN_TRAPDOOR_OPEN)
            .registerSupplier(SoundType.class, "block_wood_break", () -> (SoundType) SoundEvents.BLOCK_WOOD_BREAK)
            .registerSupplier(SoundType.class, "block_wooden_button_click_off", () -> (SoundType) SoundEvents.BLOCK_WOODEN_BUTTON_CLICK_OFF)
            .registerSupplier(SoundType.class, "block_wooden_button_click_on", () -> (SoundType) SoundEvents.BLOCK_WOODEN_BUTTON_CLICK_ON)
            .registerSupplier(SoundType.class, "block_wood_fall", () -> (SoundType) SoundEvents.BLOCK_WOOD_FALL)
            .registerSupplier(SoundType.class, "block_wood_hit", () -> (SoundType) SoundEvents.BLOCK_WOOD_HIT)
            .registerSupplier(SoundType.class, "block_wood_place", () -> (SoundType) SoundEvents.BLOCK_WOOD_PLACE)
            .registerSupplier(SoundType.class, "block_wooden_pressure_plate_click_off", () -> (SoundType) SoundEvents.BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF)
            .registerSupplier(SoundType.class, "block_wooden_pressure_plate_click_on", () -> (SoundType) SoundEvents.BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON)
            .registerSupplier(SoundType.class, "block_wood_step", () -> (SoundType) SoundEvents.BLOCK_WOOD_STEP)
            .registerSupplier(SoundType.class, "entity_zombie_ambient", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_zombie_attack_wooden_door", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR)
            .registerSupplier(SoundType.class, "entity_zombie_attack_iron_door", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_ATTACK_IRON_DOOR)
            .registerSupplier(SoundType.class, "entity_zombie_break_wooden_door", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR)
            .registerSupplier(SoundType.class, "entity_zombie_converted_to_drowned", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_CONVERTED_TO_DROWNED)
            .registerSupplier(SoundType.class, "entity_zombie_death", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_DEATH)
            .registerSupplier(SoundType.class, "entity_zombie_destroy_egg", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_DESTROY_EGG)
            .registerSupplier(SoundType.class, "entity_zombie_horse_ambient", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_HORSE_AMBIENT)
            .registerSupplier(SoundType.class, "entity_zombie_horse_death", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_HORSE_DEATH)
            .registerSupplier(SoundType.class, "entity_zombie_horse_hurt", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_HORSE_HURT)
            .registerSupplier(SoundType.class, "entity_zombie_hurt", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_HURT)
            .registerSupplier(SoundType.class, "entity_zombie_infect", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_INFECT)
            .registerSupplier(SoundType.class, "entity_zombie_pigman_ambient", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_PIGMAN_AMBIENT)
            .registerSupplier(SoundType.class, "entity_zombie_pigman_angry", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_PIGMAN_ANGRY)
            .registerSupplier(SoundType.class, "entity_zombie_pigman_death", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_PIGMAN_DEATH)
            .registerSupplier(SoundType.class, "entity_zombie_pigman_hurt", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_PIGMAN_HURT)
            .registerSupplier(SoundType.class, "entity_zombie_step", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_STEP)
            .registerSupplier(SoundType.class, "entity_zombie_villager_ambient", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_VILLAGER_AMBIENT)
            .registerSupplier(SoundType.class, "entity_zombie_villager_converted", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_VILLAGER_CONVERTED)
            .registerSupplier(SoundType.class, "entity_zombie_villager_cure", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_VILLAGER_CURE)
            .registerSupplier(SoundType.class, "entity_zombie_villager_death", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_VILLAGER_DEATH)
            .registerSupplier(SoundType.class, "entity_zombie_villager_hurt", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_VILLAGER_HURT)
            .registerSupplier(SoundType.class, "entity_zombie_villager_step", () -> (SoundType) SoundEvents.ENTITY_ZOMBIE_VILLAGER_STEP)
        ;
    }
}
