# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: "*"
  pull_request:
    branches: [ api-8 ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ${{ github.workspace}}/buildSrc/.gradle/caches
            ${{ github.workspace}}/build/fg_cache
            ${{ github.workspace}}/forge/build/fg_cache
            ${{ github.workspace}}/.gradle/caches/VanillaGradle
          key: "${{ runner.os }}-minecraft-${{ hashFiles('**/*.gradle*') }}"
          restore-keys: |
            ${{ runner.os }}-minecraft-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew -PenableTestPlugins=true build --stacktrace
      - name: Archive artifacts for build
        uses: actions/upload-artifact@v2
        with:
          name: Sponge Jars
          path: |
            ${{ github.workspace }}/SpongeAPI/build/libs/*.jar
            ${{ github.workspace }}/build/libs/*.jar
            ${{ github.workspace }}/vanilla/build/libs/*.jar
            ${{ github.workspace }}/forge/build/libs/*.jar
      - name: SpongeVanilla Production Jar
        uses: actions/upload-artifact@v2
        with:
          name: vanilla-production
          path: "${{ github.workspace }}/vanilla/build/libs/*-universal.jar"
  integrationTest:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [8, 11, 15]
    runs-on: "${{ matrix.os }}"
    steps:
      - name: "Setup JDK ${{ matrix.java }}"
        uses: actions/setup-java@v1
        with:
          java-version: "${{ matrix.java }}"
      - name: Download SpongeVanilla server
        uses: actions/download-artifact@v2
        with:
          name: vanilla-production
      - name: Run SpongeVanilla Test (windows)
        if: "runner.os == 'Windows'"
        run: java -jar $(gci | Where-Object NameString -Match "-universal.jar") --launchTarget sponge_server_it
      - name: Run SpongeVanilla Test (other)
        if: "runner.os != 'Windows'"
        run: java -jar *-universal.jar --launchTarget sponge_server_it

